// Code generated by xsd2go.xsl; DO NOT EDIT.
//go:build checkxsd

//  edited with XMLSpy v2012 sp1 (http://www.altova.com) by Tony O'Brien (OCLC) 
//  ........................................... 
//  NISO Circulation Interchange Protocol ..... 
//  ........................................... 
// Purpose:
//   This file defines the XML Schema for the initiation & response messages which comprise the NISO Circulation Interchange Protocol.
// Dependencies:
//   None.
// Change history:
//     Version 2.02 official release (9th March 2012 - AJO)
//     Version 2.02 release candidate 1 (20th December 2011, pending committee approval - AJO)
// 	1) Added LookupItemSet service, allowing for a single lookup message to return a result set containing multiple items.
// 	2) Added BibInformation, HoldingsSet, ItemInformation, SummaryHoldingsInformation, TitleHoldQueueLength, HoldingsSetId, ItemNote, MaximumItemsCount and NextItemToken, in support of the LookupItemSet service.
// 	3) Added optional/repeatable BibliographicId to LoanedItem.
// 	4) Added optional/repeatable BibliographicId to RequestedItem.
// 	5) Added optional DateDue to ItemOptionalFields.
// 	6) Made Amount optional within LoanedItem.
// 	7) Made ReminderLevel optional within LoanedItem.
// 	8) Modified ReminderLevel datatype to be nonNegativeInteger.
//     Version 2.01 (8th September 2010 - AJO)
// 	1) Allowed BibliographicRecordId to be repeatable in BibliographicDescription.
// 	2) Allowed BibliographicId and ItemId to be both repeatable and not mutually exclusive in RequestItem. At least one of the two must be present, but both can be present and both can repeat. 
// 	3) Added RequiredItemUseRestrictionType to UpdateRequestItemResponse as an optional Problem-related element.
//     Version 2.0 OFFICIAL RELEASE (29th October 2008 - AJO)
// 	1) PreviousUserId moved from LookupUserResponse to UserOptionalFields.
// 	2) UserId added to UserOptionalFields.
// 	3) ItemIdType renamed to ItemIdentifierType.
// 	4) RequestIdType renamed to RequestIdentifierType.
// 	5) UserIdType renamed to UserIdentifierType.
// 	6) UserElementsDesired wrapper element removed.
// 	7) LoanCount removed. 
// 	8) LoanDetails renamed LoanedItemsDesired.
// 	9) RequestCount removed.
// 	10) RequestDetails renamed RequestedItemsDesired.
// 	11) FiscalAccountDetails renamed to UserFiscalAccountDesired.
//     Version 2 release candidate 2 (24th October 2008, pending committee approval - AJO)
// 	1) Corrected elements within the Problem element to be a sequence rather than a choice.
// 	2) Added DeleteItem and DeleteItemResponse to NCIPMessage.
// 	3) Added DeleteUser and DeleteUserResponse to NCIPMessage.
//     Version 2 release candidate 1 (3rd October 2008, pending committee approval - AJO)
// 	1) Added further instances of the Ext/ANY element for extensibility, throughout schema.
// 	2) Added optional ItemOptionalFields within RequestItem.
// 	3) Added optional UserElementsDesired within LookupUser, as a wrapper for the existing user 'desired' elements.
// 	4) LoanedItemsDesired split into LoanCount and LoanDetails, within UserElementsDesired.
// 	5) RequestedItemsDesired split into RequestCount and RequestDetails, within UserElementsDesired.
// 	6) UserFiscalAccountDesired renamed to FiscalAccountDetails, within UserElementsDesired.
// 	7) Declared targetNamespace and default namespace to be "http://www.niso.org/2008/ncip", all elements and attributes are now 'qualified' (i.e. belong to a namespace)
// 	8) Removed DOCTYPE invocation comment.
//     Version 2 draft 4 (5th May 2008, unreleased draft - AJO)
// 	1) Problem element restructured to contain new child elements: ProblemType, ProblemDetail, ProblemElement and ProblemValue.
// 	2) Problem element replaced MessagingError and ProcessingError wherever they occur, and is repeatable.
// 	3) MessagingError and child elements removed.
// 	4) ProcessingError and child elements removed.
// 	5) New SchemeValuePair datatype added, incorporating optional Scheme attribute, and a simple string as the 'value' payload.
// 	6) Existing Scheme/Value enumeration elements switched to utilise new SchemeValuePair datatype.
// 	7) Scheme and Value data elements removed.
// 	8) PickupExpiryDate added to AcceptItem message.
// 	9) PickupLocation element added, of type SchemeValuePair. This element appears in same places as PickupExpiryDate.
// 	10) NumberOfPieces element added, of type positiveInteger. Used within ItemDescription.
//     Version 2 draft 3 (15th November 2007, unreleased draft - AJO)
// 	1) MessagingError added as a choice within NCIPMessage.
// 	2) Added new PreviousUserId element, within LookupUserResponse.
// 	3) Added optional Title and MediumType elements within LoanedItem and RequestedItem.
// 	4) Removed VisibleUserId, VisibleItemId, plus associated child elements.
// 	5) Removed UserTransaction element, current child elements promoted within LookupUserResponse.
// 	6) Removed 'Unique' prefix from all such named elements, e.g. UniqueUserId -> UserId.
// 	7) Removed AuthenticateUser service.
// 	8) Added optional NameInformation to RoutingInformation.
// 	9) Made AgencyId optional within ItemId/RequestId/UserId.
// 	10) Added optional ItemIdType/RequestIdType/UserIdType to associated parent elements.
//     Version 2 draft 2 (9th November 2007, unreleased draft - AJO)
// 	1) InitiationHeader & ResponseHeader now optional wherever they appear. 
// 	2) DeleteItem & DeleteUser services added.  
//     Version 2 draft 1 (27th June 2007, unreleased draft - AJO)
// 	1) Added ANY element, inside wrapper element <Ext>, within outer level messages, for extensibility
//     Version 1.01 (3rd May 2004 - AJO)
//     	1) Added new LookupRequest service (LookupRequest & LookupRequestResponse)
//     	2) Added new RequestElementType scheme/value pair element, for use by new LookupRequest service
//     	3) Added new optional PaidFeeAmount element to CheckOutItem, RenewItem, RequestItem, AddRequestFields, DeleteRequestFields, CancelRequestItem and LookupRequestResponse
//     	4) Added optional AcknowledgedFeeAmount to CancelRequestItem
//     	5) Made ItemElementType optional within LookupItem
//     	6) Made UserElementType optional within LookupUser
//     	
//     Version 1.0 - approved version (16th August 2002 - AJO)
//     	1) Restructured AuthenticationPrompt to be:-
// 		<!ELEMENT AuthenticationPrompt (PromptOutput , PromptInput)>
// 		<!ELEMENT PromptOutput (AuthenticationPromptData , AuthenticationPromptType)>
// 		<!ELEMENT PromptInput (AuthenticationInputType , AuthenticationDataFormatType , SensitiveDataFlag?)>
// 		<!ELEMENT SensitiveDataFlag EMPTY>
// 	2) Restructured ElectronicResource to be:-
// 		<!ELEMENT ElectronicResource ((ElectronicDataFormatType , ActualResource) | ReferenceToResource)>
// 		<!ELEMENT ElectronicDataFormatType (Scheme , Value)>
// 		<!ELEMENT ActualResource (#PCDATA)>		
// 		<!ELEMENT ReferenceToResource (#PCDATA)>
// 	3) Restructured NameInformation to be:-
// 		<!ELEMENT NameInformation (PersonalNameInformation | OrganizationNameInformation+)>
// 	4) Restructured StructuredAddress to be:-
// 		<!ELEMENT StructuredAddress (((LocationWithinBuilding?, HouseName?, (District | (PostOfficeBox, District?) | (Street, PostOfficeBox?, District?))) | (Line1 , Line2?)) , Locality? , Region? , Country? , PostalCode? , CareOf?)> 
// 	5) Restructured VisibleUserId to be:-
// 		<!ELEMENT VisibleUserId (UniqueAgencyId? , VisibleUserIdentifierType , VisibleUserIdentifier)>
// 	6) Added VisibleUserId to LookupUser as an alternative to UniqueUserId/AuthenticationInput
// 	7) Made VisibleUserId repeatable in CreateUser, UserCreated, AddUserFields, DeleteUserFields, and UserOptionalFields
// 	8) Removed DateCheckedIn from DTD
// 	9) Removed CopySupplyPermitted from DTD
// 	10) Renamed RenewalPermittedFlag to RenewalNotPermitted
// 	13) Added IndeterminateLoanPeriodFlag to AcceptItem as an alternative to DateForReturn/NonReturnableFlag
//     Version 1.0 - ballot version (14th April 2002 - AJO)
// 	1) Added required attribute "version" to NCIPMessage
// 	2) Modified DOCTYPE statement to make use of proposed naming conventions
// 	3) Added ElementName in place of Value within MessagingErrorElement and ProcessingErrorElement
//     Version 0.2d (29th March 2002 - AJO)
// 	1) Renamed BehavioralProfileType to ApplicationProfileType
// 	2) Renamed BehavioralProfileSupportedType to ApplicationProfileSupportedType
// 	3) Made DateDue optional in ItemDetails
// 	4) Added IndeterminateLoanPeriodFlag & NonReturnableFlag as alternatives to DateDue in ItemDetails
// 	5) Added optional DateCheckedOut to ItemDetails
// 	6) Made DateReturned optional in ItemDetails
// 	7) Made DateRenewed optional/repeatable in ItemDetails
// 	8) Replaced contents of AccountDetails (except AccrualDate) with FiscalTransactionInformation
// 	9) Removed AmountAccrued from the DTD
// 	10) Made FiscalTransactionReferenceId optional in FiscalTransactionInformation
// 	11) Added FiscalTransactionInformation to CreateUserFiscalTransaction
// 	12) Removed elements from CreateUserFiscalTransaction which already occur in FiscalTransactionInformation
// 	13) Made DateDue/IndeterminateLoanPeriodFlag/NonReturnableFlag mandatory in CheckoutItemResponse
// 	14) Added ElectronicResource to ItemOptionalFields
// 	15) Added SensitizationFlag to CreateItem, ItemCreated, AddItemFields and DeleteItemFields
// 	16) Added new optional element UserFiscalAccountDesired to LookupUser
// 	17) Added new optional element OnBehalfOfAgency to InitiationHeader for all initiation messages
//     Version 0.2c (15th March 2002 - AJO)
// 	1) Removed UpdateUserFiscalTransaction message & response
// 	2) Removed UserFiscalTransactionUpdated message & response
// 	3) Renamed DateDueDesired to DesiredDateDue
// 	4) Renamed DateForReturnDesired to DesiredDateForReturn
// 	6) Renamed OverdueItem to NoticeItem
// 	7) Made Amount optional within NoticeItem
// 	8) Added optional PaymentMethodType to CreateUserFiscalTransaction
// 	9) Added optional PaymentMethodType to FiscalTransactionInformation
// 	10) Added optional PaymentMethodType to AccountDetails
//     Version 0.2b (26th February 2002 - AJO)
// 	1) Replaced ShippingAddress with ShippingInformation in ItemShipped
// 	2) Removed ShippingInstructions and ShippingNote from ItemShipped
// 	3) Replaced ShippingAddress with (PhysicalAddress | ElectronicAddress) in ShippingInformation
// 	4) Removed ShippingAddress from the DTD
// 	5) Modified (DateReturned? | DateRenewed?) structure in ItemDetails to be (DateReturned | DateRenewed)? Instead
// 	6) Added new optional element DateForReturnDesired to RenewItem
// 	7) Added optional DateForReturn to RenewItemResponse
// 	8) Added optional UniqueItemId to AcceptItemResponse
// 	9) Renamed ExistingFiscalTransaction to FiscalTransactionInformation
// 	10) Promoted contents to replace NewFiscalTransaction in CreateUserFiscalTransaction
// 	11) Replaced all other occurrences of NewFiscalTransaction with FiscalTransactionInformation
// 	12) Removed NewFiscalTransaction from the DTD
// 	13) Made Amount and FiscalTransactionType mandatory in FiscalTransactionInformation
// 	14) Replaced FiscalAccountUpdateDetails with FiscalTransactionInformation in UpdateRequestItemResponse
// 	15) Removed FiscalAccountUpdateDetails from the DTD
// 	16) Added optional/repeatable RelatedFiscalTransactionReferenceId to CreateUserFiscalTransaction, FiscalTransactionInformation and AccountDetails
// 	17) Removed AuthenticationInput from SendUserNotice
//     Version 0.2a (18th February 2002 - AJO)
// 	1) Renamed BehavioralModelType to BehavioralProfileType
// 	2) Renamed BehavioralModelSupportedType to BehavioralProfileSupportedType
// 	3) Modified BibliographicRecordId to include a choice between UniqueAgencyId OR BibliographicRecordIdentifierCode
// 	4) Added optional RequestType and UniqueUserId to RoutingInformation
// 	5) Made LocationName element into a wrapper for new repeatable element LocationNameInstance, containing LocationNameValue and LocationNameLevel
// 	6) Modified Destination element to contain Location and BinNumber as an either/or choice.
// 	7) Added new AcceptItem/AcceptItemResponse messages
//     Version 0.2 (12th December 2001 - AJO)
// 	1) Added new UpdateCirculationStatus/UpdateCirculationStatusResponse messages (same basics as existing notification message) 
// 	2) Added RequestStatusType to Add/DeleteRequestFields
// 	3) Added optional UniqueRequestId to ItemCreated 
// 	4) Replaced occurrences of ItemUsePolicies with optional/repeatable ItemUseRestrictionType
// 	5) Removed ItemUsePolicies from the DTD 
// 	6) Added VisibleItemId to LookupItem, as an alternative lookup key to UniqueItem/RequestId 
// 	7) Added optional/repeatable AcknowledgedItemUseRestrictionType to CheckOutItem, RenewItem and RequestItem messages 
// 	8) Added optional/repeatable RequiredItemUseRestrictionType to CheckOutItemResponse, RenewItemResponse and RequestItemResponse 	messages 
// 	9) Added optional BehavioralModelType element to InitiationHeader
// 	10) Renamed CIPRolesSupportedType to BehavioralModelSupportedType
// 	11) Made Surname required and GivenName optional in PersonalUserNameStructured
// 	12) Removed NCIP messages AuthorizeUserAccess and AuthorizeUserAccessResponse from the DTD
// 	13) Removed elements AuthorizationRequest, AuthorizationRequestTypeScheme, AdditionalInfo, AdditionalInfoValue, 	AuthorizationResponse, AuthorizationResponseType, AccessType & AccessFee from the DTD
// 	14) Moved the child elements ElectronicDataFormatType, Language and MediumType from ItemDescription to BibliographicDescription
// 	15) Renamed various elements in line with Data Dictionary:-
// 		a. AuthenticationDataType -> AuthenticationDataFormatType
// 		b. BibliographicTitle -> Title
// 		c. UnlimitedLoanFlag -> IndeterminateLoanPeriodFlag
// 		d. BibliographicDescriptionLevel -> ItemDescriptionLevel
// 		e. PersonalUserNameStructured -> StructuredPersonalUserName
// 		f. PersonalUserCommonName -> UnstructuredPersonalUserName
// 		g. FormattedAddress -> UnstructuredAddress
// 		h. FormattedAddressData -> UnstructuredAddressData 
// 		i. FormattedAddressType -> UnstructuredAddressType 
// 		j. DesensitizationFlag -> SensitizationFlag 
// 	16) Added MandatedAction and DateEventOccurred elements, used by all 'update' type messages.
// 	17) Reversed order of child elements within ComponentId and RoutingInformation
// 	18) Added repeatable ChronologyLevelInstance element to HoldingsChronology
// 	19) Added repeatable EnumerationLevelInstance element to HoldingsEnumeration
// 	20) Dropped "Holdings" prefix from elements ChronologyCaption, ChronologyLevel, ChronologyValue, EnumerationCaption, EnumerationLevel 	and EnumerationValue
// 	21) Split UpdateUserFiscalAccount message into two alternatives: CreateUserFiscalTransaction and UpdateUserFiscalTransaction
// 	22) Split  UserFiscalAccountUpdated message into two alternatives: UserFiscalTransactionCreated and UserFiscalTransactionUpdated
// 	23) Moved FiscalActionType from FiscalAccountUpdateDetails into NewFiscalTransaction and ExistingFiscalTransaction
// 	24) Replaced FiscalAccountUpdateDetails with NewFiscalTransaction in the following messages:-
// 		a. CreateUserFiscalTransaction
// 		b. UserFiscalTransactionCreated
// 		c. CheckInItemResponse
// 		d. CheckOutItemResponse
// 		e. CirculationStatusChangeReported
// 		f. ItemCheckedIn
// 		g. ItemCheckedOut
// 		h. ItemRenewed
// 		i. RecallItemResponse
// 		j. RenewItemResponse
// 		k. RequestItemResponse
// 	25) Replaced FiscalAccountUpdateDetails with ExistingFiscalTransaction in the following messages:-
// 		a. UpdateUserFiscalTransaction
// 		b. UserFiscalTransactionUpdated
// 		c. CancelRecallItemResponse
// 		d. CancelRequestItemResponse
// 		e. ItemRecallCancelled
// 		f. UndoCheckOutItemResponse
// 	26) Added ExistingFiscalTransaction to ItemRequestCancelled message
// 	27) Removed unused orphan elements Hold/Loan/Renewal/StackRetrievalPermitted
// 	28) Removed AcknowledgedFeeAmount from ItemRequested notification message
//   Version 0.1d (19th August 2001 - AJO)
//   1)	Renamed ProcessingFailure to ProcessingError.
//   2)	Corrected ProcessingError (& child elements) syntax to match that of MessagingError.
//   3)	Renamed FailureElement/FailureType/FailureValue to ProcessingErrorElement/ProcessingErrorType/ProcessingErrorValue.
//   4)	Prefixed ErrorElement/ErrorType/ErrorValue with "Messaging", to distinguish from ProcessingError.
//   5)	Modified ItemShipped message to contain commonly used syntax for inclusion of UniqueItemId AND/OR UniqueRequestId.
//   6)	Tidied up SendUserNoticeResponse syntax.
//   7)	Renamed ClaimItemReturned -> ReportCirculationStatusChange.
//   8)	Renamed ItemClaimedReturned -> CirculationStatusChangeReported.
//   9)	Added new optional alternative elements ItemReportedLost and ItemReportedReturned to above two messages.
//   10)	Renamed DateClaimedReturned to DateReportedReturned and made a child element of ReportedReturned.
//   11)	Added new HoldingsInformation wrapper element to ItemDescription.
//   12)	Removed VolumeIssue from BibliographicDescription and from DTD.
//   13)	Removed SerialHoldings from ItemDescription and from DTD.
//   14)	Added new AuthorizeUserAccess/AuthorizeUserAccessResponse messages for RUA profile.
//   15)	Added new element for VisibleUserId, to parallel current usage of VisibleItemId element.
//   16)	Made FromSystemId & ToSystemId optional for all message headers.
//   17)	Revised AccessFee to contain only CurrencyCode and MonetaryValue.
//   18)	Removed AccessAllFlag element from AuthorizationRequest/Response and from DTD.
//   19)	Removed ValidFromDate from AuthorizationResponse.
//   20)	Renamed AuthorizationTypeResponse to AuthorizationResponseType.
//   21)	Renamed AuthorizationTypeRequest to AuthorizationRequestTypeScheme, and removed Scheme/Value child elements.
//   22)	Added new optional PickupExpiryDate element to ItemRequested, RequestItem, AddRequestFields and DeleteRequestFields.
//   23)	Renamed CirculationCategoryType to ItemUseRestrictionType.
//   24)	Added ItemReportedMissing & ItemReportedNeverBorrowed options to ReportCirculationStatusChange & CirculationStatusChangeReported messages.
//   25)	Removed redundant UniqueUserId & UniqueAgencyId elements from UserAddressInformation & AgencyAddressInformation.
//   26)	ItemUseRestrictionType now contained within new ItemUsePolicies wrapper element.
//   27)	Added new boolean elements Hold/Loan/Renewal/CopySupply/StackRetrievalPermitted to ItemUsePolicies.
//   28)	Added RequestType, RequestStatusType, PickupDate & PickupExpiryDate elements to RequestedItem.
//   29)	HoldQueuePosition & ReminderLevel made optional within RequestedItem.
//   30)	Added RequestType to RequestedItemsCount as an alternative to CirculationStatus & ItemUseRestrictionType.
//   Version 0.1c (20th April 2001 - AJO)
//   1)	Removed DesensitizationFlag from CheckOutItem and CheckOutItemResponse.
//   2)	Added DesensitizationFlag to ItemOptionalFields.
//   3)	AmountAccrued redefined to contain only CurrencyCode and MonetaryValue.
//   4)	In all notification responses: Replaced Problem with optional/repeatable MessagingError.
//   5)	Wherever the following two fields appear in the kind of structure indicated, made the element order consistent as follows: (UniqueItemId | (UniqueRequestId , UniqueItemId?)).
//   8)	Removed Agency/Item/UserLookupType from the DTD.
//   9)	Replaced Agency/Item/UserElementId occurrences with Agency/Item/UserElementType.
//   10)	Added optional UniqueRequestId to CreateItem.
//   11)	Removed AddressInformation from ItemReceived.
//   12)	Split AddressRoleType into AgencyAddressRoleType and UserAddressRoleType.
//   13)	Split AddressInformation into AgencyAddressInformation and UserAddressInformation.
//   14)	Modified all parent elements, which previously contained AddressInformation, to now use either AgencyAddressInformation or UserAddressInformation depending on which of the two objects was being referenced in each instance.
//   Version 0.1b (15th February 2001 - AJO)
//   1)	Removed SuccessFlag from DTD.
//   2)	Removed FailureFlag from DTD.
//   3)	Removed MessageResult from DTD.
//   4)	Renamed 'Failure' element to 'Problem' and enhanced to differentiate between messaging errors and processing failures, adding new child elements ProcessingFailure, FailureType, FailureElement & FailureValue in the process.
//   5)	Renamed 'Error' element to MessagingError.
//   6)	Revised ErrorElement definition to prevent infinite recursion problem.
//   7)	Made ToAgencyId mandatory in InitiationHeader.
//   8)	Added CirculationStatus to ItemOptionalFields.
//   9)	Replaced majority of references to SecurityMarker (plus other item related fields) with ItemOptionalFields wrapper, the only exceptions being the CreateItem/ItemCreated messages.
//   10)	Replaced majority of references to DateOfBirth (plus other user related fields) with UserOptionalFields wrapper, the only exceptions being the CreateUser/UserCreated messages.
//   11)	Corrected NameInformation to be optional but not repeatable in Add/DeleteUserFields.
//   12)	Added ValidFromDate & ValidToDate to Location element.
//   13)	Replaced all occurrences of StartDate & EndDate with ValidFromDate & ValidToDate.
//   14)	Removed StartDate & EndDate from DTD.
package ncip

import (
  "encoding/xml"
  utils "github.com/indexdata/go-utils/utils"
)


type NCIPMessage struct {
  XMLName xml.Name `xml:"NCIPMessage" json:"-"`
  AcceptItem *AcceptItem `xml:"AcceptItem,omitempty" json:"AcceptItem,omitempty"`
  AcceptItemResponse *AcceptItemResponse `xml:"AcceptItemResponse,omitempty" json:"AcceptItemResponse,omitempty"`
  AgencyCreated *AgencyCreated `xml:"AgencyCreated,omitempty" json:"AgencyCreated,omitempty"`
  AgencyCreatedResponse *AgencyCreatedResponse `xml:"AgencyCreatedResponse,omitempty" json:"AgencyCreatedResponse,omitempty"`
  AgencyUpdated *AgencyUpdated `xml:"AgencyUpdated,omitempty" json:"AgencyUpdated,omitempty"`
  AgencyUpdatedResponse *AgencyUpdatedResponse `xml:"AgencyUpdatedResponse,omitempty" json:"AgencyUpdatedResponse,omitempty"`
  CancelRecallItem *CancelRecallItem `xml:"CancelRecallItem,omitempty" json:"CancelRecallItem,omitempty"`
  CancelRecallItemResponse *CancelRecallItemResponse `xml:"CancelRecallItemResponse,omitempty" json:"CancelRecallItemResponse,omitempty"`
  CancelRequestItem *CancelRequestItem `xml:"CancelRequestItem,omitempty" json:"CancelRequestItem,omitempty"`
  CancelRequestItemResponse *CancelRequestItemResponse `xml:"CancelRequestItemResponse,omitempty" json:"CancelRequestItemResponse,omitempty"`
  CheckInItem *CheckInItem `xml:"CheckInItem,omitempty" json:"CheckInItem,omitempty"`
  CheckInItemResponse *CheckInItemResponse `xml:"CheckInItemResponse,omitempty" json:"CheckInItemResponse,omitempty"`
  CheckOutItem *CheckOutItem `xml:"CheckOutItem,omitempty" json:"CheckOutItem,omitempty"`
  CheckOutItemResponse *CheckOutItemResponse `xml:"CheckOutItemResponse,omitempty" json:"CheckOutItemResponse,omitempty"`
  CirculationStatusChangeReported *CirculationStatusChangeReported `xml:"CirculationStatusChangeReported,omitempty" json:"CirculationStatusChangeReported,omitempty"`
  CirculationStatusChangeReportedResponse *CirculationStatusChangeReportedResponse `xml:"CirculationStatusChangeReportedResponse,omitempty" json:"CirculationStatusChangeReportedResponse,omitempty"`
  CirculationStatusUpdated *CirculationStatusUpdated `xml:"CirculationStatusUpdated,omitempty" json:"CirculationStatusUpdated,omitempty"`
  CirculationStatusUpdatedResponse *CirculationStatusUpdatedResponse `xml:"CirculationStatusUpdatedResponse,omitempty" json:"CirculationStatusUpdatedResponse,omitempty"`
  CreateAgency *CreateAgency `xml:"CreateAgency,omitempty" json:"CreateAgency,omitempty"`
  CreateAgencyResponse *CreateAgencyResponse `xml:"CreateAgencyResponse,omitempty" json:"CreateAgencyResponse,omitempty"`
  CreateItem *CreateItem `xml:"CreateItem,omitempty" json:"CreateItem,omitempty"`
  CreateItemResponse *CreateItemResponse `xml:"CreateItemResponse,omitempty" json:"CreateItemResponse,omitempty"`
  CreateUser *CreateUser `xml:"CreateUser,omitempty" json:"CreateUser,omitempty"`
  CreateUserResponse *CreateUserResponse `xml:"CreateUserResponse,omitempty" json:"CreateUserResponse,omitempty"`
  CreateUserFiscalTransaction *CreateUserFiscalTransaction `xml:"CreateUserFiscalTransaction,omitempty" json:"CreateUserFiscalTransaction,omitempty"`
  CreateUserFiscalTransactionResponse *CreateUserFiscalTransactionResponse `xml:"CreateUserFiscalTransactionResponse,omitempty" json:"CreateUserFiscalTransactionResponse,omitempty"`
  DeleteItem *DeleteItem `xml:"DeleteItem,omitempty" json:"DeleteItem,omitempty"`
  DeleteItemResponse *DeleteItemResponse `xml:"DeleteItemResponse,omitempty" json:"DeleteItemResponse,omitempty"`
  DeleteUser *DeleteUser `xml:"DeleteUser,omitempty" json:"DeleteUser,omitempty"`
  DeleteUserResponse *DeleteUserResponse `xml:"DeleteUserResponse,omitempty" json:"DeleteUserResponse,omitempty"`
  ItemCheckedIn *ItemCheckedIn `xml:"ItemCheckedIn,omitempty" json:"ItemCheckedIn,omitempty"`
  ItemCheckedInResponse *ItemCheckedInResponse `xml:"ItemCheckedInResponse,omitempty" json:"ItemCheckedInResponse,omitempty"`
  ItemCheckedOut *ItemCheckedOut `xml:"ItemCheckedOut,omitempty" json:"ItemCheckedOut,omitempty"`
  ItemCheckedOutResponse *ItemCheckedOutResponse `xml:"ItemCheckedOutResponse,omitempty" json:"ItemCheckedOutResponse,omitempty"`
  ItemCreated *ItemCreated `xml:"ItemCreated,omitempty" json:"ItemCreated,omitempty"`
  ItemCreatedResponse *ItemCreatedResponse `xml:"ItemCreatedResponse,omitempty" json:"ItemCreatedResponse,omitempty"`
  ItemRecallCancelled *ItemRecallCancelled `xml:"ItemRecallCancelled,omitempty" json:"ItemRecallCancelled,omitempty"`
  ItemRecallCancelledResponse *ItemRecallCancelledResponse `xml:"ItemRecallCancelledResponse,omitempty" json:"ItemRecallCancelledResponse,omitempty"`
  ItemRecalled *ItemRecalled `xml:"ItemRecalled,omitempty" json:"ItemRecalled,omitempty"`
  ItemRecalledResponse *ItemRecalledResponse `xml:"ItemRecalledResponse,omitempty" json:"ItemRecalledResponse,omitempty"`
  ItemReceived *ItemReceived `xml:"ItemReceived,omitempty" json:"ItemReceived,omitempty"`
  ItemReceivedResponse *ItemReceivedResponse `xml:"ItemReceivedResponse,omitempty" json:"ItemReceivedResponse,omitempty"`
  ItemRenewed *ItemRenewed `xml:"ItemRenewed,omitempty" json:"ItemRenewed,omitempty"`
  ItemRenewedResponse *ItemRenewedResponse `xml:"ItemRenewedResponse,omitempty" json:"ItemRenewedResponse,omitempty"`
  ItemRequestCancelled *ItemRequestCancelled `xml:"ItemRequestCancelled,omitempty" json:"ItemRequestCancelled,omitempty"`
  ItemRequestCancelledResponse *ItemRequestCancelledResponse `xml:"ItemRequestCancelledResponse,omitempty" json:"ItemRequestCancelledResponse,omitempty"`
  ItemRequestUpdated *ItemRequestUpdated `xml:"ItemRequestUpdated,omitempty" json:"ItemRequestUpdated,omitempty"`
  ItemRequestUpdatedResponse *ItemRequestUpdatedResponse `xml:"ItemRequestUpdatedResponse,omitempty" json:"ItemRequestUpdatedResponse,omitempty"`
  ItemRequested *ItemRequested `xml:"ItemRequested,omitempty" json:"ItemRequested,omitempty"`
  ItemRequestedResponse *ItemRequestedResponse `xml:"ItemRequestedResponse,omitempty" json:"ItemRequestedResponse,omitempty"`
  ItemShipped *ItemShipped `xml:"ItemShipped,omitempty" json:"ItemShipped,omitempty"`
  ItemShippedResponse *ItemShippedResponse `xml:"ItemShippedResponse,omitempty" json:"ItemShippedResponse,omitempty"`
  ItemUpdated *ItemUpdated `xml:"ItemUpdated,omitempty" json:"ItemUpdated,omitempty"`
  ItemUpdatedResponse *ItemUpdatedResponse `xml:"ItemUpdatedResponse,omitempty" json:"ItemUpdatedResponse,omitempty"`
  LookupAgency *LookupAgency `xml:"LookupAgency,omitempty" json:"LookupAgency,omitempty"`
  LookupAgencyResponse *LookupAgencyResponse `xml:"LookupAgencyResponse,omitempty" json:"LookupAgencyResponse,omitempty"`
  LookupItem *LookupItem `xml:"LookupItem,omitempty" json:"LookupItem,omitempty"`
  LookupItemResponse *LookupItemResponse `xml:"LookupItemResponse,omitempty" json:"LookupItemResponse,omitempty"`
  LookupItemSet *LookupItemSet `xml:"LookupItemSet,omitempty" json:"LookupItemSet,omitempty"`
  LookupItemSetResponse *LookupItemSetResponse `xml:"LookupItemSetResponse,omitempty" json:"LookupItemSetResponse,omitempty"`
  LookupRequest *LookupRequest `xml:"LookupRequest,omitempty" json:"LookupRequest,omitempty"`
  LookupRequestResponse *LookupRequestResponse `xml:"LookupRequestResponse,omitempty" json:"LookupRequestResponse,omitempty"`
  LookupUser *LookupUser `xml:"LookupUser,omitempty" json:"LookupUser,omitempty"`
  LookupUserResponse *LookupUserResponse `xml:"LookupUserResponse,omitempty" json:"LookupUserResponse,omitempty"`
  RecallItem *RecallItem `xml:"RecallItem,omitempty" json:"RecallItem,omitempty"`
  RecallItemResponse *RecallItemResponse `xml:"RecallItemResponse,omitempty" json:"RecallItemResponse,omitempty"`
  RenewItem *RenewItem `xml:"RenewItem,omitempty" json:"RenewItem,omitempty"`
  RenewItemResponse *RenewItemResponse `xml:"RenewItemResponse,omitempty" json:"RenewItemResponse,omitempty"`
  ReportCirculationStatusChange *ReportCirculationStatusChange `xml:"ReportCirculationStatusChange,omitempty" json:"ReportCirculationStatusChange,omitempty"`
  ReportCirculationStatusChangeResponse *ReportCirculationStatusChangeResponse `xml:"ReportCirculationStatusChangeResponse,omitempty" json:"ReportCirculationStatusChangeResponse,omitempty"`
  RequestItem *RequestItem `xml:"RequestItem,omitempty" json:"RequestItem,omitempty"`
  RequestItemResponse *RequestItemResponse `xml:"RequestItemResponse,omitempty" json:"RequestItemResponse,omitempty"`
  SendUserNotice *SendUserNotice `xml:"SendUserNotice,omitempty" json:"SendUserNotice,omitempty"`
  SendUserNoticeResponse *SendUserNoticeResponse `xml:"SendUserNoticeResponse,omitempty" json:"SendUserNoticeResponse,omitempty"`
  UndoCheckOutItem *UndoCheckOutItem `xml:"UndoCheckOutItem,omitempty" json:"UndoCheckOutItem,omitempty"`
  UndoCheckOutItemResponse *UndoCheckOutItemResponse `xml:"UndoCheckOutItemResponse,omitempty" json:"UndoCheckOutItemResponse,omitempty"`
  UpdateAgency *UpdateAgency `xml:"UpdateAgency,omitempty" json:"UpdateAgency,omitempty"`
  UpdateAgencyResponse *UpdateAgencyResponse `xml:"UpdateAgencyResponse,omitempty" json:"UpdateAgencyResponse,omitempty"`
  UpdateCirculationStatus *UpdateCirculationStatus `xml:"UpdateCirculationStatus,omitempty" json:"UpdateCirculationStatus,omitempty"`
  UpdateCirculationStatusResponse *UpdateCirculationStatusResponse `xml:"UpdateCirculationStatusResponse,omitempty" json:"UpdateCirculationStatusResponse,omitempty"`
  UpdateItem *UpdateItem `xml:"UpdateItem,omitempty" json:"UpdateItem,omitempty"`
  UpdateItemResponse *UpdateItemResponse `xml:"UpdateItemResponse,omitempty" json:"UpdateItemResponse,omitempty"`
  UpdateRequestItem *UpdateRequestItem `xml:"UpdateRequestItem,omitempty" json:"UpdateRequestItem,omitempty"`
  UpdateRequestItemResponse *UpdateRequestItemResponse `xml:"UpdateRequestItemResponse,omitempty" json:"UpdateRequestItemResponse,omitempty"`
  UpdateUser *UpdateUser `xml:"UpdateUser,omitempty" json:"UpdateUser,omitempty"`
  UpdateUserResponse *UpdateUserResponse `xml:"UpdateUserResponse,omitempty" json:"UpdateUserResponse,omitempty"`
  UserCreated *UserCreated `xml:"UserCreated,omitempty" json:"UserCreated,omitempty"`
  UserCreatedResponse *UserCreatedResponse `xml:"UserCreatedResponse,omitempty" json:"UserCreatedResponse,omitempty"`
  UserFiscalTransactionCreated *UserFiscalTransactionCreated `xml:"UserFiscalTransactionCreated,omitempty" json:"UserFiscalTransactionCreated,omitempty"`
  UserFiscalTransactionCreatedResponse *UserFiscalTransactionCreatedResponse `xml:"UserFiscalTransactionCreatedResponse,omitempty" json:"UserFiscalTransactionCreatedResponse,omitempty"`
  UserNoticeSent *UserNoticeSent `xml:"UserNoticeSent,omitempty" json:"UserNoticeSent,omitempty"`
  UserNoticeSentResponse *UserNoticeSentResponse `xml:"UserNoticeSentResponse,omitempty" json:"UserNoticeSentResponse,omitempty"`
  UserUpdated *UserUpdated `xml:"UserUpdated,omitempty" json:"UserUpdated,omitempty"`
  UserUpdatedResponse *UserUpdatedResponse `xml:"UserUpdatedResponse,omitempty" json:"UserUpdatedResponse,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
  Version utils.PrefixAttr `xml:"version,attr" json:"@version"`
}


type AcceptItem struct {
  XMLName xml.Name `xml:"AcceptItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  RequestId RequestId `xml:"RequestId" json:"RequestId"`
  RequestedActionType SchemeValuePair `xml:"RequestedActionType" json:"RequestedActionType"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  DateForReturn string `xml:"DateForReturn,omitempty" json:"DateForReturn,omitempty"`
  IndeterminateLoanPeriodFlag *IndeterminateLoanPeriodFlag `xml:"IndeterminateLoanPeriodFlag,omitempty" json:"IndeterminateLoanPeriodFlag,omitempty"`
  NonReturnableFlag *NonReturnableFlag `xml:"NonReturnableFlag,omitempty" json:"NonReturnableFlag,omitempty"`
  RenewalNotPermitted *RenewalNotPermitted `xml:"RenewalNotPermitted,omitempty" json:"RenewalNotPermitted,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  PickupLocation *SchemeValuePair `xml:"PickupLocation,omitempty" json:"PickupLocation,omitempty"`
  PickupExpiryDate string `xml:"PickupExpiryDate,omitempty" json:"PickupExpiryDate,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AcceptItemResponse struct {
  XMLName xml.Name `xml:"AcceptItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AgencyCreated struct {
  XMLName xml.Name `xml:"AgencyCreated" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  OrganizationNameInformation []OrganizationNameInformation `xml:"OrganizationNameInformation,omitempty" json:"OrganizationNameInformation,omitempty"`
  AgencyAddressInformation []AgencyAddressInformation `xml:"AgencyAddressInformation,omitempty" json:"AgencyAddressInformation,omitempty"`
  AuthenticationPrompt []AuthenticationPrompt `xml:"AuthenticationPrompt,omitempty" json:"AuthenticationPrompt,omitempty"`
  ApplicationProfileSupportedType []SchemeValuePair `xml:"ApplicationProfileSupportedType,omitempty" json:"ApplicationProfileSupportedType,omitempty"`
  ConsortiumAgreement []SchemeValuePair `xml:"ConsortiumAgreement,omitempty" json:"ConsortiumAgreement,omitempty"`
  AgencyUserPrivilegeType []SchemeValuePair `xml:"AgencyUserPrivilegeType,omitempty" json:"AgencyUserPrivilegeType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AgencyCreatedResponse struct {
  XMLName xml.Name `xml:"AgencyCreatedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AgencyUpdated struct {
  XMLName xml.Name `xml:"AgencyUpdated" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  DeleteAgencyFields *DeleteAgencyFields `xml:"DeleteAgencyFields,omitempty" json:"DeleteAgencyFields,omitempty"`
  AddAgencyFields *AddAgencyFields `xml:"AddAgencyFields,omitempty" json:"AddAgencyFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AgencyUpdatedResponse struct {
  XMLName xml.Name `xml:"AgencyUpdatedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CancelRecallItem struct {
  XMLName xml.Name `xml:"CancelRecallItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CancelRecallItemResponse struct {
  XMLName xml.Name `xml:"CancelRecallItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CancelRequestItem struct {
  XMLName xml.Name `xml:"CancelRequestItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  RequestType SchemeValuePair `xml:"RequestType" json:"RequestType"`
  RequestScopeType *SchemeValuePair `xml:"RequestScopeType,omitempty" json:"RequestScopeType,omitempty"`
  AcknowledgedFeeAmount *AcknowledgedFeeAmount `xml:"AcknowledgedFeeAmount,omitempty" json:"AcknowledgedFeeAmount,omitempty"`
  PaidFeeAmount *PaidFeeAmount `xml:"PaidFeeAmount,omitempty" json:"PaidFeeAmount,omitempty"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CancelRequestItemResponse struct {
  XMLName xml.Name `xml:"CancelRequestItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CheckInItem struct {
  XMLName xml.Name `xml:"CheckInItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CheckInItemResponse struct {
  XMLName xml.Name `xml:"CheckInItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  RoutingInformation *RoutingInformation `xml:"RoutingInformation,omitempty" json:"RoutingInformation,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CheckOutItem struct {
  XMLName xml.Name `xml:"CheckOutItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  AcknowledgedFeeAmount *AcknowledgedFeeAmount `xml:"AcknowledgedFeeAmount,omitempty" json:"AcknowledgedFeeAmount,omitempty"`
  PaidFeeAmount *PaidFeeAmount `xml:"PaidFeeAmount,omitempty" json:"PaidFeeAmount,omitempty"`
  AcknowledgedItemUseRestrictionType []SchemeValuePair `xml:"AcknowledgedItemUseRestrictionType,omitempty" json:"AcknowledgedItemUseRestrictionType,omitempty"`
  ShippingInformation *ShippingInformation `xml:"ShippingInformation,omitempty" json:"ShippingInformation,omitempty"`
  ResourceDesired *ResourceDesired `xml:"ResourceDesired,omitempty" json:"ResourceDesired,omitempty"`
  DesiredDateDue string `xml:"DesiredDateDue,omitempty" json:"DesiredDateDue,omitempty"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CheckOutItemResponse struct {
  XMLName xml.Name `xml:"CheckOutItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  RequiredFeeAmount *RequiredFeeAmount `xml:"RequiredFeeAmount,omitempty" json:"RequiredFeeAmount,omitempty"`
  RequiredItemUseRestrictionType []SchemeValuePair `xml:"RequiredItemUseRestrictionType,omitempty" json:"RequiredItemUseRestrictionType,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  DateDue string `xml:"DateDue,omitempty" json:"DateDue,omitempty"`
  IndeterminateLoanPeriodFlag *IndeterminateLoanPeriodFlag `xml:"IndeterminateLoanPeriodFlag,omitempty" json:"IndeterminateLoanPeriodFlag,omitempty"`
  NonReturnableFlag *NonReturnableFlag `xml:"NonReturnableFlag,omitempty" json:"NonReturnableFlag,omitempty"`
  RenewalCount uint64 `xml:"RenewalCount,omitempty" json:"RenewalCount,omitempty"`
  ElectronicResource *ElectronicResource `xml:"ElectronicResource,omitempty" json:"ElectronicResource,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CirculationStatusChangeReported struct {
  XMLName xml.Name `xml:"CirculationStatusChangeReported" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  UserId UserId `xml:"UserId" json:"UserId"`
  ItemReportedReturned *ItemReportedReturned `xml:"ItemReportedReturned,omitempty" json:"ItemReportedReturned,omitempty"`
  ItemReportedNeverBorrowed *ItemReportedNeverBorrowed `xml:"ItemReportedNeverBorrowed,omitempty" json:"ItemReportedNeverBorrowed,omitempty"`
  ItemReportedLost *ItemReportedLost `xml:"ItemReportedLost,omitempty" json:"ItemReportedLost,omitempty"`
  ItemReportedMissing *ItemReportedMissing `xml:"ItemReportedMissing,omitempty" json:"ItemReportedMissing,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CirculationStatusChangeReportedResponse struct {
  XMLName xml.Name `xml:"CirculationStatusChangeReportedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CirculationStatusUpdated struct {
  XMLName xml.Name `xml:"CirculationStatusUpdated" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  CirculationStatus SchemeValuePair `xml:"CirculationStatus" json:"CirculationStatus"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CirculationStatusUpdatedResponse struct {
  XMLName xml.Name `xml:"CirculationStatusUpdatedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CreateAgency struct {
  XMLName xml.Name `xml:"CreateAgency" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  AgencyId *SchemeValuePair `xml:"AgencyId,omitempty" json:"AgencyId,omitempty"`
  OrganizationNameInformation []OrganizationNameInformation `xml:"OrganizationNameInformation,omitempty" json:"OrganizationNameInformation,omitempty"`
  AgencyAddressInformation []AgencyAddressInformation `xml:"AgencyAddressInformation,omitempty" json:"AgencyAddressInformation,omitempty"`
  AuthenticationPrompt []AuthenticationPrompt `xml:"AuthenticationPrompt,omitempty" json:"AuthenticationPrompt,omitempty"`
  ApplicationProfileSupportedType []SchemeValuePair `xml:"ApplicationProfileSupportedType,omitempty" json:"ApplicationProfileSupportedType,omitempty"`
  ConsortiumAgreement []SchemeValuePair `xml:"ConsortiumAgreement,omitempty" json:"ConsortiumAgreement,omitempty"`
  AgencyUserPrivilegeType []SchemeValuePair `xml:"AgencyUserPrivilegeType,omitempty" json:"AgencyUserPrivilegeType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CreateAgencyResponse struct {
  XMLName xml.Name `xml:"CreateAgencyResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  AgencyId *SchemeValuePair `xml:"AgencyId,omitempty" json:"AgencyId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CreateItem struct {
  XMLName xml.Name `xml:"CreateItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  BibliographicDescription BibliographicDescription `xml:"BibliographicDescription" json:"BibliographicDescription"`
  ItemUseRestrictionType []SchemeValuePair `xml:"ItemUseRestrictionType,omitempty" json:"ItemUseRestrictionType,omitempty"`
  CirculationStatus *SchemeValuePair `xml:"CirculationStatus,omitempty" json:"CirculationStatus,omitempty"`
  ItemDescription *ItemDescription `xml:"ItemDescription,omitempty" json:"ItemDescription,omitempty"`
  Location []Location `xml:"Location,omitempty" json:"Location,omitempty"`
  PhysicalCondition *PhysicalCondition `xml:"PhysicalCondition,omitempty" json:"PhysicalCondition,omitempty"`
  SecurityMarker *SchemeValuePair `xml:"SecurityMarker,omitempty" json:"SecurityMarker,omitempty"`
  SensitizationFlag *SensitizationFlag `xml:"SensitizationFlag,omitempty" json:"SensitizationFlag,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CreateItemResponse struct {
  XMLName xml.Name `xml:"CreateItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CreateUser struct {
  XMLName xml.Name `xml:"CreateUser" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  NameInformation NameInformation `xml:"NameInformation" json:"NameInformation"`
  UserAddressInformation []UserAddressInformation `xml:"UserAddressInformation,omitempty" json:"UserAddressInformation,omitempty"`
  DateOfBirth string `xml:"DateOfBirth,omitempty" json:"DateOfBirth,omitempty"`
  UserLanguage []SchemeValuePair `xml:"UserLanguage,omitempty" json:"UserLanguage,omitempty"`
  UserPrivilege []UserPrivilege `xml:"UserPrivilege,omitempty" json:"UserPrivilege,omitempty"`
  BlockOrTrap []BlockOrTrap `xml:"BlockOrTrap,omitempty" json:"BlockOrTrap,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CreateUserResponse struct {
  XMLName xml.Name `xml:"CreateUserResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CreateUserFiscalTransaction struct {
  XMLName xml.Name `xml:"CreateUserFiscalTransaction" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  FiscalTransactionInformation FiscalTransactionInformation `xml:"FiscalTransactionInformation" json:"FiscalTransactionInformation"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CreateUserFiscalTransactionResponse struct {
  XMLName xml.Name `xml:"CreateUserFiscalTransactionResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  FiscalTransactionReferenceId *FiscalTransactionReferenceId `xml:"FiscalTransactionReferenceId,omitempty" json:"FiscalTransactionReferenceId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type DeleteItem struct {
  XMLName xml.Name `xml:"DeleteItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type DeleteItemResponse struct {
  XMLName xml.Name `xml:"DeleteItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type DeleteUser struct {
  XMLName xml.Name `xml:"DeleteUser" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type DeleteUserResponse struct {
  XMLName xml.Name `xml:"DeleteUserResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type InitiationHeader struct {
  XMLName xml.Name `xml:"InitiationHeader" json:"-"`
  FromSystemId *SchemeValuePair `xml:"FromSystemId,omitempty" json:"FromSystemId,omitempty"`
  FromSystemAuthentication string `xml:"FromSystemAuthentication,omitempty" json:"FromSystemAuthentication,omitempty"`
  FromAgencyId FromAgencyId `xml:"FromAgencyId" json:"FromAgencyId"`
  FromAgencyAuthentication string `xml:"FromAgencyAuthentication,omitempty" json:"FromAgencyAuthentication,omitempty"`
  OnBehalfOfAgency *OnBehalfOfAgency `xml:"OnBehalfOfAgency,omitempty" json:"OnBehalfOfAgency,omitempty"`
  ToSystemId *SchemeValuePair `xml:"ToSystemId,omitempty" json:"ToSystemId,omitempty"`
  ToAgencyId ToAgencyId `xml:"ToAgencyId" json:"ToAgencyId"`
  ApplicationProfileType *SchemeValuePair `xml:"ApplicationProfileType,omitempty" json:"ApplicationProfileType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemCheckedIn struct {
  XMLName xml.Name `xml:"ItemCheckedIn" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  RoutingInformation *RoutingInformation `xml:"RoutingInformation,omitempty" json:"RoutingInformation,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemCheckedInResponse struct {
  XMLName xml.Name `xml:"ItemCheckedInResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemCheckedOut struct {
  XMLName xml.Name `xml:"ItemCheckedOut" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId UserId `xml:"UserId" json:"UserId"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  DateDue string `xml:"DateDue,omitempty" json:"DateDue,omitempty"`
  IndeterminateLoanPeriodFlag *IndeterminateLoanPeriodFlag `xml:"IndeterminateLoanPeriodFlag,omitempty" json:"IndeterminateLoanPeriodFlag,omitempty"`
  NonReturnableFlag *NonReturnableFlag `xml:"NonReturnableFlag,omitempty" json:"NonReturnableFlag,omitempty"`
  ElectronicResourceProvidedFlag *ElectronicResourceProvidedFlag `xml:"ElectronicResourceProvidedFlag,omitempty" json:"ElectronicResourceProvidedFlag,omitempty"`
  RenewalCount uint64 `xml:"RenewalCount,omitempty" json:"RenewalCount,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ShippingInformation *ShippingInformation `xml:"ShippingInformation,omitempty" json:"ShippingInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemCheckedOutResponse struct {
  XMLName xml.Name `xml:"ItemCheckedOutResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemCreated struct {
  XMLName xml.Name `xml:"ItemCreated" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  BibliographicDescription BibliographicDescription `xml:"BibliographicDescription" json:"BibliographicDescription"`
  ItemUseRestrictionType []SchemeValuePair `xml:"ItemUseRestrictionType,omitempty" json:"ItemUseRestrictionType,omitempty"`
  CirculationStatus *SchemeValuePair `xml:"CirculationStatus,omitempty" json:"CirculationStatus,omitempty"`
  ItemDescription *ItemDescription `xml:"ItemDescription,omitempty" json:"ItemDescription,omitempty"`
  Location []Location `xml:"Location,omitempty" json:"Location,omitempty"`
  PhysicalCondition *PhysicalCondition `xml:"PhysicalCondition,omitempty" json:"PhysicalCondition,omitempty"`
  SecurityMarker *SchemeValuePair `xml:"SecurityMarker,omitempty" json:"SecurityMarker,omitempty"`
  SensitizationFlag *SensitizationFlag `xml:"SensitizationFlag,omitempty" json:"SensitizationFlag,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemCreatedResponse struct {
  XMLName xml.Name `xml:"ItemCreatedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRecallCancelled struct {
  XMLName xml.Name `xml:"ItemRecallCancelled" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRecallCancelledResponse struct {
  XMLName xml.Name `xml:"ItemRecallCancelledResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRecalled struct {
  XMLName xml.Name `xml:"ItemRecalled" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  DateDue string `xml:"DateDue" json:"DateDue"`
  ShippingInformation *ShippingInformation `xml:"ShippingInformation,omitempty" json:"ShippingInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRecalledResponse struct {
  XMLName xml.Name `xml:"ItemRecalledResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemReceived struct {
  XMLName xml.Name `xml:"ItemReceived" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  DateReceived string `xml:"DateReceived" json:"DateReceived"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemReceivedResponse struct {
  XMLName xml.Name `xml:"ItemReceivedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRenewed struct {
  XMLName xml.Name `xml:"ItemRenewed" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  DateDue string `xml:"DateDue" json:"DateDue"`
  RenewalCount uint64 `xml:"RenewalCount,omitempty" json:"RenewalCount,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRenewedResponse struct {
  XMLName xml.Name `xml:"ItemRenewedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRequestCancelled struct {
  XMLName xml.Name `xml:"ItemRequestCancelled" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId UserId `xml:"UserId" json:"UserId"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  RequestType SchemeValuePair `xml:"RequestType" json:"RequestType"`
  RequestScopeType *SchemeValuePair `xml:"RequestScopeType,omitempty" json:"RequestScopeType,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRequestCancelledResponse struct {
  XMLName xml.Name `xml:"ItemRequestCancelledResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRequestUpdated struct {
  XMLName xml.Name `xml:"ItemRequestUpdated" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestType *SchemeValuePair `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  DeleteRequestFields *DeleteRequestFields `xml:"DeleteRequestFields,omitempty" json:"DeleteRequestFields,omitempty"`
  AddRequestFields *AddRequestFields `xml:"AddRequestFields,omitempty" json:"AddRequestFields,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRequestUpdatedResponse struct {
  XMLName xml.Name `xml:"ItemRequestUpdatedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRequested struct {
  XMLName xml.Name `xml:"ItemRequested" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId UserId `xml:"UserId" json:"UserId"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  BibliographicId *BibliographicId `xml:"BibliographicId,omitempty" json:"BibliographicId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  RequestType SchemeValuePair `xml:"RequestType" json:"RequestType"`
  RequestScopeType SchemeValuePair `xml:"RequestScopeType" json:"RequestScopeType"`
  ShippingInformation *ShippingInformation `xml:"ShippingInformation,omitempty" json:"ShippingInformation,omitempty"`
  EarliestDateNeeded string `xml:"EarliestDateNeeded,omitempty" json:"EarliestDateNeeded,omitempty"`
  NeedBeforeDate string `xml:"NeedBeforeDate,omitempty" json:"NeedBeforeDate,omitempty"`
  PickupLocation *SchemeValuePair `xml:"PickupLocation,omitempty" json:"PickupLocation,omitempty"`
  PickupExpiryDate string `xml:"PickupExpiryDate,omitempty" json:"PickupExpiryDate,omitempty"`
  DateOfUserRequest string `xml:"DateOfUserRequest,omitempty" json:"DateOfUserRequest,omitempty"`
  DateAvailable string `xml:"DateAvailable,omitempty" json:"DateAvailable,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemRequestedResponse struct {
  XMLName xml.Name `xml:"ItemRequestedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemShipped struct {
  XMLName xml.Name `xml:"ItemShipped" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  DateShipped string `xml:"DateShipped" json:"DateShipped"`
  ShippingInformation ShippingInformation `xml:"ShippingInformation" json:"ShippingInformation"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemShippedResponse struct {
  XMLName xml.Name `xml:"ItemShippedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemUpdated struct {
  XMLName xml.Name `xml:"ItemUpdated" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  DeleteItemFields *DeleteItemFields `xml:"DeleteItemFields,omitempty" json:"DeleteItemFields,omitempty"`
  AddItemFields *AddItemFields `xml:"AddItemFields,omitempty" json:"AddItemFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemUpdatedResponse struct {
  XMLName xml.Name `xml:"ItemUpdatedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LookupAgency struct {
  XMLName xml.Name `xml:"LookupAgency" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  AgencyElementType []SchemeValuePair `xml:"AgencyElementType,omitempty" json:"AgencyElementType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LookupAgencyResponse struct {
  XMLName xml.Name `xml:"LookupAgencyResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  AgencyId *SchemeValuePair `xml:"AgencyId,omitempty" json:"AgencyId,omitempty"`
  OrganizationNameInformation []OrganizationNameInformation `xml:"OrganizationNameInformation,omitempty" json:"OrganizationNameInformation,omitempty"`
  AgencyAddressInformation []AgencyAddressInformation `xml:"AgencyAddressInformation,omitempty" json:"AgencyAddressInformation,omitempty"`
  AuthenticationPrompt []AuthenticationPrompt `xml:"AuthenticationPrompt,omitempty" json:"AuthenticationPrompt,omitempty"`
  ApplicationProfileSupportedType []SchemeValuePair `xml:"ApplicationProfileSupportedType,omitempty" json:"ApplicationProfileSupportedType,omitempty"`
  ConsortiumAgreement []SchemeValuePair `xml:"ConsortiumAgreement,omitempty" json:"ConsortiumAgreement,omitempty"`
  AgencyUserPrivilegeType []SchemeValuePair `xml:"AgencyUserPrivilegeType,omitempty" json:"AgencyUserPrivilegeType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LookupItem struct {
  XMLName xml.Name `xml:"LookupItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  CurrentBorrowerDesired *CurrentBorrowerDesired `xml:"CurrentBorrowerDesired,omitempty" json:"CurrentBorrowerDesired,omitempty"`
  CurrentRequestersDesired *CurrentRequestersDesired `xml:"CurrentRequestersDesired,omitempty" json:"CurrentRequestersDesired,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LookupItemResponse struct {
  XMLName xml.Name `xml:"LookupItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  HoldPickupDate string `xml:"HoldPickupDate,omitempty" json:"HoldPickupDate,omitempty"`
  DateRecalled string `xml:"DateRecalled,omitempty" json:"DateRecalled,omitempty"`
  ItemTransaction *ItemTransaction `xml:"ItemTransaction,omitempty" json:"ItemTransaction,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LookupItemSet struct {
  XMLName xml.Name `xml:"LookupItemSet" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  BibliographicId []BibliographicId `xml:"BibliographicId,omitempty" json:"BibliographicId,omitempty"`
  HoldingsSetId []string `xml:"HoldingsSetId,omitempty" json:"HoldingsSetId,omitempty"`
  ItemId []ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  CurrentBorrowerDesired *CurrentBorrowerDesired `xml:"CurrentBorrowerDesired,omitempty" json:"CurrentBorrowerDesired,omitempty"`
  CurrentRequestersDesired *CurrentRequestersDesired `xml:"CurrentRequestersDesired,omitempty" json:"CurrentRequestersDesired,omitempty"`
  MaximumItemsCount uint64 `xml:"MaximumItemsCount,omitempty" json:"MaximumItemsCount,omitempty"`
  NextItemToken string `xml:"NextItemToken,omitempty" json:"NextItemToken,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LookupItemSetResponse struct {
  XMLName xml.Name `xml:"LookupItemSetResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  //  A Problem element here means "the entire service failed." 
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  BibInformation []BibInformation `xml:"BibInformation,omitempty" json:"BibInformation,omitempty"`
  NextItemToken string `xml:"NextItemToken,omitempty" json:"NextItemToken,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LookupRequest struct {
  XMLName xml.Name `xml:"LookupRequest" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestType *SchemeValuePair `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  RequestElementType []SchemeValuePair `xml:"RequestElementType,omitempty" json:"RequestElementType,omitempty"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LookupRequestResponse struct {
  XMLName xml.Name `xml:"LookupRequestResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  RequestType *SchemeValuePair `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
  RequestScopeType *SchemeValuePair `xml:"RequestScopeType,omitempty" json:"RequestScopeType,omitempty"`
  RequestStatusType *SchemeValuePair `xml:"RequestStatusType,omitempty" json:"RequestStatusType,omitempty"`
  HoldQueuePosition uint64 `xml:"HoldQueuePosition,omitempty" json:"HoldQueuePosition,omitempty"`
  ShippingInformation *ShippingInformation `xml:"ShippingInformation,omitempty" json:"ShippingInformation,omitempty"`
  EarliestDateNeeded string `xml:"EarliestDateNeeded,omitempty" json:"EarliestDateNeeded,omitempty"`
  NeedBeforeDate string `xml:"NeedBeforeDate,omitempty" json:"NeedBeforeDate,omitempty"`
  PickupDate string `xml:"PickupDate,omitempty" json:"PickupDate,omitempty"`
  PickupLocation *SchemeValuePair `xml:"PickupLocation,omitempty" json:"PickupLocation,omitempty"`
  PickupExpiryDate string `xml:"PickupExpiryDate,omitempty" json:"PickupExpiryDate,omitempty"`
  DateOfUserRequest string `xml:"DateOfUserRequest,omitempty" json:"DateOfUserRequest,omitempty"`
  DateAvailable string `xml:"DateAvailable,omitempty" json:"DateAvailable,omitempty"`
  AcknowledgedFeeAmount *AcknowledgedFeeAmount `xml:"AcknowledgedFeeAmount,omitempty" json:"AcknowledgedFeeAmount,omitempty"`
  PaidFeeAmount *PaidFeeAmount `xml:"PaidFeeAmount,omitempty" json:"PaidFeeAmount,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LookupUser struct {
  XMLName xml.Name `xml:"LookupUser" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  LoanedItemsDesired *LoanedItemsDesired `xml:"LoanedItemsDesired,omitempty" json:"LoanedItemsDesired,omitempty"`
  RequestedItemsDesired *RequestedItemsDesired `xml:"RequestedItemsDesired,omitempty" json:"RequestedItemsDesired,omitempty"`
  UserFiscalAccountDesired *UserFiscalAccountDesired `xml:"UserFiscalAccountDesired,omitempty" json:"UserFiscalAccountDesired,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LookupUserResponse struct {
  XMLName xml.Name `xml:"LookupUserResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  UserFiscalAccount []UserFiscalAccount `xml:"UserFiscalAccount,omitempty" json:"UserFiscalAccount,omitempty"`
  LoanedItemsCount []LoanedItemsCount `xml:"LoanedItemsCount,omitempty" json:"LoanedItemsCount,omitempty"`
  LoanedItem []LoanedItem `xml:"LoanedItem,omitempty" json:"LoanedItem,omitempty"`
  RequestedItemsCount []RequestedItemsCount `xml:"RequestedItemsCount,omitempty" json:"RequestedItemsCount,omitempty"`
  RequestedItem []RequestedItem `xml:"RequestedItem,omitempty" json:"RequestedItem,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type RecallItem struct {
  XMLName xml.Name `xml:"RecallItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  DesiredDateDue string `xml:"DesiredDateDue,omitempty" json:"DesiredDateDue,omitempty"`
  ShippingInformation *ShippingInformation `xml:"ShippingInformation,omitempty" json:"ShippingInformation,omitempty"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type RecallItemResponse struct {
  XMLName xml.Name `xml:"RecallItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  DateDue string `xml:"DateDue,omitempty" json:"DateDue,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type RenewItem struct {
  XMLName xml.Name `xml:"RenewItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  DesiredDateDue string `xml:"DesiredDateDue,omitempty" json:"DesiredDateDue,omitempty"`
  DesiredDateForReturn string `xml:"DesiredDateForReturn,omitempty" json:"DesiredDateForReturn,omitempty"`
  AcknowledgedFeeAmount *AcknowledgedFeeAmount `xml:"AcknowledgedFeeAmount,omitempty" json:"AcknowledgedFeeAmount,omitempty"`
  PaidFeeAmount *PaidFeeAmount `xml:"PaidFeeAmount,omitempty" json:"PaidFeeAmount,omitempty"`
  AcknowledgedItemUseRestrictionType []SchemeValuePair `xml:"AcknowledgedItemUseRestrictionType,omitempty" json:"AcknowledgedItemUseRestrictionType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type RenewItemResponse struct {
  XMLName xml.Name `xml:"RenewItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  RequiredFeeAmount *RequiredFeeAmount `xml:"RequiredFeeAmount,omitempty" json:"RequiredFeeAmount,omitempty"`
  RequiredItemUseRestrictionType []SchemeValuePair `xml:"RequiredItemUseRestrictionType,omitempty" json:"RequiredItemUseRestrictionType,omitempty"`
  Pending *Pending `xml:"Pending,omitempty" json:"Pending,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  DateDue string `xml:"DateDue,omitempty" json:"DateDue,omitempty"`
  DateForReturn string `xml:"DateForReturn,omitempty" json:"DateForReturn,omitempty"`
  RenewalCount uint64 `xml:"RenewalCount,omitempty" json:"RenewalCount,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ReportCirculationStatusChange struct {
  XMLName xml.Name `xml:"ReportCirculationStatusChange" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  ItemReportedReturned *ItemReportedReturned `xml:"ItemReportedReturned,omitempty" json:"ItemReportedReturned,omitempty"`
  ItemReportedNeverBorrowed *ItemReportedNeverBorrowed `xml:"ItemReportedNeverBorrowed,omitempty" json:"ItemReportedNeverBorrowed,omitempty"`
  ItemReportedLost *ItemReportedLost `xml:"ItemReportedLost,omitempty" json:"ItemReportedLost,omitempty"`
  ItemReportedMissing *ItemReportedMissing `xml:"ItemReportedMissing,omitempty" json:"ItemReportedMissing,omitempty"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ReportCirculationStatusChangeResponse struct {
  XMLName xml.Name `xml:"ReportCirculationStatusChangeResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type RequestItem struct {
  XMLName xml.Name `xml:"RequestItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  ItemId []ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  BibliographicId []BibliographicId `xml:"BibliographicId,omitempty" json:"BibliographicId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  RequestType SchemeValuePair `xml:"RequestType" json:"RequestType"`
  RequestScopeType SchemeValuePair `xml:"RequestScopeType" json:"RequestScopeType"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  ShippingInformation *ShippingInformation `xml:"ShippingInformation,omitempty" json:"ShippingInformation,omitempty"`
  EarliestDateNeeded string `xml:"EarliestDateNeeded,omitempty" json:"EarliestDateNeeded,omitempty"`
  NeedBeforeDate string `xml:"NeedBeforeDate,omitempty" json:"NeedBeforeDate,omitempty"`
  PickupLocation *SchemeValuePair `xml:"PickupLocation,omitempty" json:"PickupLocation,omitempty"`
  PickupExpiryDate string `xml:"PickupExpiryDate,omitempty" json:"PickupExpiryDate,omitempty"`
  AcknowledgedFeeAmount *AcknowledgedFeeAmount `xml:"AcknowledgedFeeAmount,omitempty" json:"AcknowledgedFeeAmount,omitempty"`
  PaidFeeAmount *PaidFeeAmount `xml:"PaidFeeAmount,omitempty" json:"PaidFeeAmount,omitempty"`
  AcknowledgedItemUseRestrictionType []SchemeValuePair `xml:"AcknowledgedItemUseRestrictionType,omitempty" json:"AcknowledgedItemUseRestrictionType,omitempty"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type RequestItemResponse struct {
  XMLName xml.Name `xml:"RequestItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  RequiredFeeAmount *RequiredFeeAmount `xml:"RequiredFeeAmount,omitempty" json:"RequiredFeeAmount,omitempty"`
  RequiredItemUseRestrictionType []SchemeValuePair `xml:"RequiredItemUseRestrictionType,omitempty" json:"RequiredItemUseRestrictionType,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  RequestType *SchemeValuePair `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
  RequestScopeType *SchemeValuePair `xml:"RequestScopeType,omitempty" json:"RequestScopeType,omitempty"`
  ShippingInformation *ShippingInformation `xml:"ShippingInformation,omitempty" json:"ShippingInformation,omitempty"`
  DateAvailable string `xml:"DateAvailable,omitempty" json:"DateAvailable,omitempty"`
  HoldPickupDate string `xml:"HoldPickupDate,omitempty" json:"HoldPickupDate,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ResponseHeader struct {
  XMLName xml.Name `xml:"ResponseHeader" json:"-"`
  FromSystemId *SchemeValuePair `xml:"FromSystemId,omitempty" json:"FromSystemId,omitempty"`
  FromSystemAuthentication string `xml:"FromSystemAuthentication,omitempty" json:"FromSystemAuthentication,omitempty"`
  FromAgencyId FromAgencyId `xml:"FromAgencyId" json:"FromAgencyId"`
  FromAgencyAuthentication string `xml:"FromAgencyAuthentication,omitempty" json:"FromAgencyAuthentication,omitempty"`
  ToSystemId *SchemeValuePair `xml:"ToSystemId,omitempty" json:"ToSystemId,omitempty"`
  ToAgencyId ToAgencyId `xml:"ToAgencyId" json:"ToAgencyId"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type SendUserNotice struct {
  XMLName xml.Name `xml:"SendUserNotice" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  UserId UserId `xml:"UserId" json:"UserId"`
  DateToSend string `xml:"DateToSend,omitempty" json:"DateToSend,omitempty"`
  UserNoticeDetails UserNoticeDetails `xml:"UserNoticeDetails" json:"UserNoticeDetails"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type SendUserNoticeResponse struct {
  XMLName xml.Name `xml:"SendUserNoticeResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  DateSent string `xml:"DateSent,omitempty" json:"DateSent,omitempty"`
  DateWillSend string `xml:"DateWillSend,omitempty" json:"DateWillSend,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UndoCheckOutItem struct {
  XMLName xml.Name `xml:"UndoCheckOutItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UndoCheckOutItemResponse struct {
  XMLName xml.Name `xml:"UndoCheckOutItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UpdateAgency struct {
  XMLName xml.Name `xml:"UpdateAgency" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  DeleteAgencyFields *DeleteAgencyFields `xml:"DeleteAgencyFields,omitempty" json:"DeleteAgencyFields,omitempty"`
  AddAgencyFields *AddAgencyFields `xml:"AddAgencyFields,omitempty" json:"AddAgencyFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UpdateAgencyResponse struct {
  XMLName xml.Name `xml:"UpdateAgencyResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  AgencyId *SchemeValuePair `xml:"AgencyId,omitempty" json:"AgencyId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UpdateCirculationStatus struct {
  XMLName xml.Name `xml:"UpdateCirculationStatus" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  CirculationStatus SchemeValuePair `xml:"CirculationStatus" json:"CirculationStatus"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UpdateCirculationStatusResponse struct {
  XMLName xml.Name `xml:"UpdateCirculationStatusResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UpdateItem struct {
  XMLName xml.Name `xml:"UpdateItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  DeleteItemFields *DeleteItemFields `xml:"DeleteItemFields,omitempty" json:"DeleteItemFields,omitempty"`
  AddItemFields *AddItemFields `xml:"AddItemFields,omitempty" json:"AddItemFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UpdateItemResponse struct {
  XMLName xml.Name `xml:"UpdateItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UpdateRequestItem struct {
  XMLName xml.Name `xml:"UpdateRequestItem" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestType *SchemeValuePair `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  DeleteRequestFields *DeleteRequestFields `xml:"DeleteRequestFields,omitempty" json:"DeleteRequestFields,omitempty"`
  AddRequestFields *AddRequestFields `xml:"AddRequestFields,omitempty" json:"AddRequestFields,omitempty"`
  ItemElementType []SchemeValuePair `xml:"ItemElementType,omitempty" json:"ItemElementType,omitempty"`
  UserElementType []SchemeValuePair `xml:"UserElementType,omitempty" json:"UserElementType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UpdateRequestItemResponse struct {
  XMLName xml.Name `xml:"UpdateRequestItemResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  RequiredFeeAmount *RequiredFeeAmount `xml:"RequiredFeeAmount,omitempty" json:"RequiredFeeAmount,omitempty"`
  RequiredItemUseRestrictionType []SchemeValuePair `xml:"RequiredItemUseRestrictionType,omitempty" json:"RequiredItemUseRestrictionType,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  RequestType *SchemeValuePair `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
  RequestScopeType *SchemeValuePair `xml:"RequestScopeType,omitempty" json:"RequestScopeType,omitempty"`
  DateAvailable string `xml:"DateAvailable,omitempty" json:"DateAvailable,omitempty"`
  HoldPickupDate string `xml:"HoldPickupDate,omitempty" json:"HoldPickupDate,omitempty"`
  FiscalTransactionInformation *FiscalTransactionInformation `xml:"FiscalTransactionInformation,omitempty" json:"FiscalTransactionInformation,omitempty"`
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  UserOptionalFields *UserOptionalFields `xml:"UserOptionalFields,omitempty" json:"UserOptionalFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UpdateUser struct {
  XMLName xml.Name `xml:"UpdateUser" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  MandatedAction *MandatedAction `xml:"MandatedAction,omitempty" json:"MandatedAction,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  DeleteUserFields *DeleteUserFields `xml:"DeleteUserFields,omitempty" json:"DeleteUserFields,omitempty"`
  AddUserFields *AddUserFields `xml:"AddUserFields,omitempty" json:"AddUserFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UpdateUserResponse struct {
  XMLName xml.Name `xml:"UpdateUserResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserCreated struct {
  XMLName xml.Name `xml:"UserCreated" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId UserId `xml:"UserId" json:"UserId"`
  NameInformation NameInformation `xml:"NameInformation" json:"NameInformation"`
  UserAddressInformation []UserAddressInformation `xml:"UserAddressInformation,omitempty" json:"UserAddressInformation,omitempty"`
  DateOfBirth string `xml:"DateOfBirth,omitempty" json:"DateOfBirth,omitempty"`
  UserLanguage []SchemeValuePair `xml:"UserLanguage,omitempty" json:"UserLanguage,omitempty"`
  UserPrivilege []UserPrivilege `xml:"UserPrivilege,omitempty" json:"UserPrivilege,omitempty"`
  BlockOrTrap []BlockOrTrap `xml:"BlockOrTrap,omitempty" json:"BlockOrTrap,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserCreatedResponse struct {
  XMLName xml.Name `xml:"UserCreatedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserFiscalTransactionCreated struct {
  XMLName xml.Name `xml:"UserFiscalTransactionCreated" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId UserId `xml:"UserId" json:"UserId"`
  FiscalTransactionInformation FiscalTransactionInformation `xml:"FiscalTransactionInformation" json:"FiscalTransactionInformation"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserFiscalTransactionCreatedResponse struct {
  XMLName xml.Name `xml:"UserFiscalTransactionCreatedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserNoticeSent struct {
  XMLName xml.Name `xml:"UserNoticeSent" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId UserId `xml:"UserId" json:"UserId"`
  DateSent string `xml:"DateSent" json:"DateSent"`
  UserNoticeDetails UserNoticeDetails `xml:"UserNoticeDetails" json:"UserNoticeDetails"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserNoticeSentResponse struct {
  XMLName xml.Name `xml:"UserNoticeSentResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserUpdated struct {
  XMLName xml.Name `xml:"UserUpdated" json:"-"`
  InitiationHeader *InitiationHeader `xml:"InitiationHeader,omitempty" json:"InitiationHeader,omitempty"`
  UserId UserId `xml:"UserId" json:"UserId"`
  DeleteUserFields *DeleteUserFields `xml:"DeleteUserFields,omitempty" json:"DeleteUserFields,omitempty"`
  AddUserFields *AddUserFields `xml:"AddUserFields,omitempty" json:"AddUserFields,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserUpdatedResponse struct {
  XMLName xml.Name `xml:"UserUpdatedResponse" json:"-"`
  ResponseHeader *ResponseHeader `xml:"ResponseHeader,omitempty" json:"ResponseHeader,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AccountBalance struct {
  XMLName xml.Name `xml:"AccountBalance" json:"-"`
  CurrencyCode SchemeValuePair `xml:"CurrencyCode" json:"CurrencyCode"`
  MonetaryValue int64 `xml:"MonetaryValue" json:"MonetaryValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AccountDetails struct {
  XMLName xml.Name `xml:"AccountDetails" json:"-"`
  AccrualDate string `xml:"AccrualDate" json:"AccrualDate"`
  FiscalTransactionInformation FiscalTransactionInformation `xml:"FiscalTransactionInformation" json:"FiscalTransactionInformation"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type AccrualDate struct {
  XMLName xml.Name `xml:"AccrualDate" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type AcknowledgedFeeAmount struct {
  XMLName xml.Name `xml:"AcknowledgedFeeAmount" json:"-"`
  CurrencyCode SchemeValuePair `xml:"CurrencyCode" json:"CurrencyCode"`
  MonetaryValue int64 `xml:"MonetaryValue" json:"MonetaryValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type AcknowledgedItemUseRestrictionType struct {
  XMLName xml.Name `xml:"AcknowledgedItemUseRestrictionType" json:"-"`
  SchemeValuePair
}

type ActualResource struct {
  XMLName xml.Name `xml:"ActualResource" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type AddAgencyFields struct {
  XMLName xml.Name `xml:"AddAgencyFields" json:"-"`
  OrganizationNameInformation []OrganizationNameInformation `xml:"OrganizationNameInformation,omitempty" json:"OrganizationNameInformation,omitempty"`
  AgencyAddressInformation []AgencyAddressInformation `xml:"AgencyAddressInformation,omitempty" json:"AgencyAddressInformation,omitempty"`
  AuthenticationPrompt []AuthenticationPrompt `xml:"AuthenticationPrompt,omitempty" json:"AuthenticationPrompt,omitempty"`
  ApplicationProfileSupportedType []SchemeValuePair `xml:"ApplicationProfileSupportedType,omitempty" json:"ApplicationProfileSupportedType,omitempty"`
  ConsortiumAgreement []SchemeValuePair `xml:"ConsortiumAgreement,omitempty" json:"ConsortiumAgreement,omitempty"`
  AgencyUserPrivilegeType []SchemeValuePair `xml:"AgencyUserPrivilegeType,omitempty" json:"AgencyUserPrivilegeType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AddItemFields struct {
  XMLName xml.Name `xml:"AddItemFields" json:"-"`
  BibliographicDescription *BibliographicDescription `xml:"BibliographicDescription,omitempty" json:"BibliographicDescription,omitempty"`
  ItemUseRestrictionType []SchemeValuePair `xml:"ItemUseRestrictionType,omitempty" json:"ItemUseRestrictionType,omitempty"`
  ItemDescription *ItemDescription `xml:"ItemDescription,omitempty" json:"ItemDescription,omitempty"`
  Location []Location `xml:"Location,omitempty" json:"Location,omitempty"`
  PhysicalCondition *PhysicalCondition `xml:"PhysicalCondition,omitempty" json:"PhysicalCondition,omitempty"`
  SecurityMarker *SchemeValuePair `xml:"SecurityMarker,omitempty" json:"SecurityMarker,omitempty"`
  SensitizationFlag *SensitizationFlag `xml:"SensitizationFlag,omitempty" json:"SensitizationFlag,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AddRequestFields struct {
  XMLName xml.Name `xml:"AddRequestFields" json:"-"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestType *SchemeValuePair `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
  RequestScopeType *SchemeValuePair `xml:"RequestScopeType,omitempty" json:"RequestScopeType,omitempty"`
  RequestStatusType *SchemeValuePair `xml:"RequestStatusType,omitempty" json:"RequestStatusType,omitempty"`
  ShippingInformation *ShippingInformation `xml:"ShippingInformation,omitempty" json:"ShippingInformation,omitempty"`
  EarliestDateNeeded string `xml:"EarliestDateNeeded,omitempty" json:"EarliestDateNeeded,omitempty"`
  NeedBeforeDate string `xml:"NeedBeforeDate,omitempty" json:"NeedBeforeDate,omitempty"`
  PickupLocation *SchemeValuePair `xml:"PickupLocation,omitempty" json:"PickupLocation,omitempty"`
  PickupExpiryDate string `xml:"PickupExpiryDate,omitempty" json:"PickupExpiryDate,omitempty"`
  DateOfUserRequest string `xml:"DateOfUserRequest,omitempty" json:"DateOfUserRequest,omitempty"`
  DateAvailable string `xml:"DateAvailable,omitempty" json:"DateAvailable,omitempty"`
  AcknowledgedFeeAmount *AcknowledgedFeeAmount `xml:"AcknowledgedFeeAmount,omitempty" json:"AcknowledgedFeeAmount,omitempty"`
  PaidFeeAmount *PaidFeeAmount `xml:"PaidFeeAmount,omitempty" json:"PaidFeeAmount,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AddUserFields struct {
  XMLName xml.Name `xml:"AddUserFields" json:"-"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  NameInformation *NameInformation `xml:"NameInformation,omitempty" json:"NameInformation,omitempty"`
  UserAddressInformation []UserAddressInformation `xml:"UserAddressInformation,omitempty" json:"UserAddressInformation,omitempty"`
  DateOfBirth string `xml:"DateOfBirth,omitempty" json:"DateOfBirth,omitempty"`
  UserLanguage []SchemeValuePair `xml:"UserLanguage,omitempty" json:"UserLanguage,omitempty"`
  UserPrivilege []UserPrivilege `xml:"UserPrivilege,omitempty" json:"UserPrivilege,omitempty"`
  BlockOrTrap []BlockOrTrap `xml:"BlockOrTrap,omitempty" json:"BlockOrTrap,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type AgencyAddressInformation struct {
  XMLName xml.Name `xml:"AgencyAddressInformation" json:"-"`
  AgencyAddressRoleType SchemeValuePair `xml:"AgencyAddressRoleType" json:"AgencyAddressRoleType"`
  ValidFromDate string `xml:"ValidFromDate,omitempty" json:"ValidFromDate,omitempty"`
  ValidToDate string `xml:"ValidToDate,omitempty" json:"ValidToDate,omitempty"`
  PhysicalAddress *PhysicalAddress `xml:"PhysicalAddress,omitempty" json:"PhysicalAddress,omitempty"`
  ElectronicAddress *ElectronicAddress `xml:"ElectronicAddress,omitempty" json:"ElectronicAddress,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type AgencyAddressRoleType struct {
  XMLName xml.Name `xml:"AgencyAddressRoleType" json:"-"`
  SchemeValuePair
}

type AgencyElementType struct {
  XMLName xml.Name `xml:"AgencyElementType" json:"-"`
  SchemeValuePair
}

type AgencyId struct {
  XMLName xml.Name `xml:"AgencyId" json:"-"`
  SchemeValuePair
}

type AgencyUserPrivilegeType struct {
  XMLName xml.Name `xml:"AgencyUserPrivilegeType" json:"-"`
  SchemeValuePair
}


type Amount struct {
  XMLName xml.Name `xml:"Amount" json:"-"`
  CurrencyCode SchemeValuePair `xml:"CurrencyCode" json:"CurrencyCode"`
  MonetaryValue int64 `xml:"MonetaryValue" json:"MonetaryValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ApplicationProfileType struct {
  XMLName xml.Name `xml:"ApplicationProfileType" json:"-"`
  SchemeValuePair
}

type ApplicationProfileSupportedType struct {
  XMLName xml.Name `xml:"ApplicationProfileSupportedType" json:"-"`
  SchemeValuePair
}

type AuthenticationDataFormatType struct {
  XMLName xml.Name `xml:"AuthenticationDataFormatType" json:"-"`
  SchemeValuePair
}


type AuthenticationInput struct {
  XMLName xml.Name `xml:"AuthenticationInput" json:"-"`
  AuthenticationInputData string `xml:"AuthenticationInputData" json:"AuthenticationInputData"`
  AuthenticationDataFormatType SchemeValuePair `xml:"AuthenticationDataFormatType" json:"AuthenticationDataFormatType"`
  AuthenticationInputType SchemeValuePair `xml:"AuthenticationInputType" json:"AuthenticationInputType"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type AuthenticationInputData struct {
  XMLName xml.Name `xml:"AuthenticationInputData" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type AuthenticationInputType struct {
  XMLName xml.Name `xml:"AuthenticationInputType" json:"-"`
  SchemeValuePair
}


type AuthenticationPrompt struct {
  XMLName xml.Name `xml:"AuthenticationPrompt" json:"-"`
  PromptOutput PromptOutput `xml:"PromptOutput" json:"PromptOutput"`
  PromptInput PromptInput `xml:"PromptInput" json:"PromptInput"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type AuthenticationPromptData struct {
  XMLName xml.Name `xml:"AuthenticationPromptData" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type AuthenticationPromptType struct {
  XMLName xml.Name `xml:"AuthenticationPromptType" json:"-"`
  SchemeValuePair
}

type Author struct {
  XMLName xml.Name `xml:"Author" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type AuthorOfComponent struct {
  XMLName xml.Name `xml:"AuthorOfComponent" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type BibInformation struct {
  XMLName xml.Name `xml:"BibInformation" json:"-"`
  //  Required to be present if the initiation message had this BibliographicId.  
  BibliographicId *BibliographicId `xml:"BibliographicId,omitempty" json:"BibliographicId,omitempty"`
  BibliographicDescription *BibliographicDescription `xml:"BibliographicDescription,omitempty" json:"BibliographicDescription,omitempty"`
  //  This is the length of all holds that are *at* the title level, *not* a total of all item-level holds.  
  TitleHoldQueueLength uint64 `xml:"TitleHoldQueueLength,omitempty" json:"TitleHoldQueueLength,omitempty"`
  //  These are the requesters for holds *at* the title level, *not* item-level.  
  CurrentRequester []CurrentRequester `xml:"CurrentRequester,omitempty" json:"CurrentRequester,omitempty"`
  HoldingsSet []HoldingsSet `xml:"HoldingsSet,omitempty" json:"HoldingsSet,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
}


type BibliographicDescription struct {
  XMLName xml.Name `xml:"BibliographicDescription" json:"-"`
  Author string `xml:"Author,omitempty" json:"Author,omitempty"`
  AuthorOfComponent string `xml:"AuthorOfComponent,omitempty" json:"AuthorOfComponent,omitempty"`
  BibliographicItemId *BibliographicItemId `xml:"BibliographicItemId,omitempty" json:"BibliographicItemId,omitempty"`
  BibliographicRecordId []BibliographicRecordId `xml:"BibliographicRecordId,omitempty" json:"BibliographicRecordId,omitempty"`
  ComponentId *ComponentId `xml:"ComponentId,omitempty" json:"ComponentId,omitempty"`
  Edition string `xml:"Edition,omitempty" json:"Edition,omitempty"`
  Pagination string `xml:"Pagination,omitempty" json:"Pagination,omitempty"`
  PlaceOfPublication string `xml:"PlaceOfPublication,omitempty" json:"PlaceOfPublication,omitempty"`
  PublicationDate string `xml:"PublicationDate,omitempty" json:"PublicationDate,omitempty"`
  PublicationDateOfComponent string `xml:"PublicationDateOfComponent,omitempty" json:"PublicationDateOfComponent,omitempty"`
  Publisher string `xml:"Publisher,omitempty" json:"Publisher,omitempty"`
  SeriesTitleNumber string `xml:"SeriesTitleNumber,omitempty" json:"SeriesTitleNumber,omitempty"`
  Title string `xml:"Title,omitempty" json:"Title,omitempty"`
  TitleOfComponent string `xml:"TitleOfComponent,omitempty" json:"TitleOfComponent,omitempty"`
  BibliographicLevel *SchemeValuePair `xml:"BibliographicLevel,omitempty" json:"BibliographicLevel,omitempty"`
  SponsoringBody string `xml:"SponsoringBody,omitempty" json:"SponsoringBody,omitempty"`
  ElectronicDataFormatType *SchemeValuePair `xml:"ElectronicDataFormatType,omitempty" json:"ElectronicDataFormatType,omitempty"`
  Language *SchemeValuePair `xml:"Language,omitempty" json:"Language,omitempty"`
  MediumType *SchemeValuePair `xml:"MediumType,omitempty" json:"MediumType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type BibliographicId struct {
  XMLName xml.Name `xml:"BibliographicId" json:"-"`
  BibliographicItemId *BibliographicItemId `xml:"BibliographicItemId,omitempty" json:"BibliographicItemId,omitempty"`
  BibliographicRecordId *BibliographicRecordId `xml:"BibliographicRecordId,omitempty" json:"BibliographicRecordId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type BibliographicItemId struct {
  XMLName xml.Name `xml:"BibliographicItemId" json:"-"`
  BibliographicItemIdentifier string `xml:"BibliographicItemIdentifier" json:"BibliographicItemIdentifier"`
  BibliographicItemIdentifierCode *SchemeValuePair `xml:"BibliographicItemIdentifierCode,omitempty" json:"BibliographicItemIdentifierCode,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type BibliographicItemIdentifier struct {
  XMLName xml.Name `xml:"BibliographicItemIdentifier" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type BibliographicItemIdentifierCode struct {
  XMLName xml.Name `xml:"BibliographicItemIdentifierCode" json:"-"`
  SchemeValuePair
}

type BibliographicLevel struct {
  XMLName xml.Name `xml:"BibliographicLevel" json:"-"`
  SchemeValuePair
}


type BibliographicRecordId struct {
  XMLName xml.Name `xml:"BibliographicRecordId" json:"-"`
  BibliographicRecordIdentifier string `xml:"BibliographicRecordIdentifier" json:"BibliographicRecordIdentifier"`
  AgencyId *SchemeValuePair `xml:"AgencyId,omitempty" json:"AgencyId,omitempty"`
  BibliographicRecordIdentifierCode *SchemeValuePair `xml:"BibliographicRecordIdentifierCode,omitempty" json:"BibliographicRecordIdentifierCode,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type BibliographicRecordIdentifier struct {
  XMLName xml.Name `xml:"BibliographicRecordIdentifier" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type BibliographicRecordIdentifierCode struct {
  XMLName xml.Name `xml:"BibliographicRecordIdentifierCode" json:"-"`
  SchemeValuePair
}

type BinNumber struct {
  XMLName xml.Name `xml:"BinNumber" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type BlockOrTrap struct {
  XMLName xml.Name `xml:"BlockOrTrap" json:"-"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  BlockOrTrapType SchemeValuePair `xml:"BlockOrTrapType" json:"BlockOrTrapType"`
  ValidFromDate string `xml:"ValidFromDate,omitempty" json:"ValidFromDate,omitempty"`
  ValidToDate string `xml:"ValidToDate,omitempty" json:"ValidToDate,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type BlockOrTrapType struct {
  XMLName xml.Name `xml:"BlockOrTrapType" json:"-"`
  SchemeValuePair
}

type CallNumber struct {
  XMLName xml.Name `xml:"CallNumber" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type CareOf struct {
  XMLName xml.Name `xml:"CareOf" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type ChronologyLevelInstance struct {
  XMLName xml.Name `xml:"ChronologyLevelInstance" json:"-"`
  ChronologyCaption string `xml:"ChronologyCaption,omitempty" json:"ChronologyCaption,omitempty"`
  ChronologyLevel uint64 `xml:"ChronologyLevel,omitempty" json:"ChronologyLevel,omitempty"`
  ChronologyValue string `xml:"ChronologyValue" json:"ChronologyValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ChronologyCaption struct {
  XMLName xml.Name `xml:"ChronologyCaption" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type ChronologyLevel struct {
  XMLName xml.Name `xml:"ChronologyLevel" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type ChronologyValue struct {
  XMLName xml.Name `xml:"ChronologyValue" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type CirculationStatus struct {
  XMLName xml.Name `xml:"CirculationStatus" json:"-"`
  SchemeValuePair
}


type ComponentId struct {
  XMLName xml.Name `xml:"ComponentId" json:"-"`
  ComponentIdentifierType SchemeValuePair `xml:"ComponentIdentifierType" json:"ComponentIdentifierType"`
  ComponentIdentifier string `xml:"ComponentIdentifier" json:"ComponentIdentifier"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ComponentIdentifier struct {
  XMLName xml.Name `xml:"ComponentIdentifier" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type ComponentIdentifierType struct {
  XMLName xml.Name `xml:"ComponentIdentifierType" json:"-"`
  SchemeValuePair
}

type ConsortiumAgreement struct {
  XMLName xml.Name `xml:"ConsortiumAgreement" json:"-"`
  SchemeValuePair
}

type CopyNumber struct {
  XMLName xml.Name `xml:"CopyNumber" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type Country struct {
  XMLName xml.Name `xml:"Country" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type CurrencyCode struct {
  XMLName xml.Name `xml:"CurrencyCode" json:"-"`
  SchemeValuePair
}


type CurrentBorrower struct {
  XMLName xml.Name `xml:"CurrentBorrower" json:"-"`
  UserId UserId `xml:"UserId" json:"UserId"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CurrentBorrowerDesired struct {
  XMLName xml.Name `xml:"CurrentBorrowerDesired" json:"-"`
}


type CurrentRequester struct {
  XMLName xml.Name `xml:"CurrentRequester" json:"-"`
  UserId UserId `xml:"UserId" json:"UserId"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type CurrentRequestersDesired struct {
  XMLName xml.Name `xml:"CurrentRequestersDesired" json:"-"`
}

type DateAvailable struct {
  XMLName xml.Name `xml:"DateAvailable" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateCheckedOut struct {
  XMLName xml.Name `xml:"DateCheckedOut" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateReportedReturned struct {
  XMLName xml.Name `xml:"DateReportedReturned" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateDue struct {
  XMLName xml.Name `xml:"DateDue" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateEventOccurred struct {
  XMLName xml.Name `xml:"DateEventOccurred" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateForReturn struct {
  XMLName xml.Name `xml:"DateForReturn" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateOfBirth struct {
  XMLName xml.Name `xml:"DateOfBirth" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateOfExpectedReply struct {
  XMLName xml.Name `xml:"DateOfExpectedReply" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateOfUserPrivilegeStatus struct {
  XMLName xml.Name `xml:"DateOfUserPrivilegeStatus" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateOfUserRequest struct {
  XMLName xml.Name `xml:"DateOfUserRequest" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DatePlaced struct {
  XMLName xml.Name `xml:"DatePlaced" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateRecalled struct {
  XMLName xml.Name `xml:"DateRecalled" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateReceived struct {
  XMLName xml.Name `xml:"DateReceived" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateRenewed struct {
  XMLName xml.Name `xml:"DateRenewed" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateReturned struct {
  XMLName xml.Name `xml:"DateReturned" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateSent struct {
  XMLName xml.Name `xml:"DateSent" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateShipped struct {
  XMLName xml.Name `xml:"DateShipped" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateToSend struct {
  XMLName xml.Name `xml:"DateToSend" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DateWillSend struct {
  XMLName xml.Name `xml:"DateWillSend" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type DeleteAgencyFields struct {
  XMLName xml.Name `xml:"DeleteAgencyFields" json:"-"`
  OrganizationNameInformation []OrganizationNameInformation `xml:"OrganizationNameInformation,omitempty" json:"OrganizationNameInformation,omitempty"`
  AgencyAddressInformation []AgencyAddressInformation `xml:"AgencyAddressInformation,omitempty" json:"AgencyAddressInformation,omitempty"`
  AuthenticationPrompt []AuthenticationPrompt `xml:"AuthenticationPrompt,omitempty" json:"AuthenticationPrompt,omitempty"`
  ApplicationProfileSupportedType []SchemeValuePair `xml:"ApplicationProfileSupportedType,omitempty" json:"ApplicationProfileSupportedType,omitempty"`
  ConsortiumAgreement []SchemeValuePair `xml:"ConsortiumAgreement,omitempty" json:"ConsortiumAgreement,omitempty"`
  AgencyUserPrivilegeType []SchemeValuePair `xml:"AgencyUserPrivilegeType,omitempty" json:"AgencyUserPrivilegeType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type DeleteItemFields struct {
  XMLName xml.Name `xml:"DeleteItemFields" json:"-"`
  BibliographicDescription *BibliographicDescription `xml:"BibliographicDescription,omitempty" json:"BibliographicDescription,omitempty"`
  ItemUseRestrictionType []SchemeValuePair `xml:"ItemUseRestrictionType,omitempty" json:"ItemUseRestrictionType,omitempty"`
  ItemDescription *ItemDescription `xml:"ItemDescription,omitempty" json:"ItemDescription,omitempty"`
  Location []Location `xml:"Location,omitempty" json:"Location,omitempty"`
  PhysicalCondition *PhysicalCondition `xml:"PhysicalCondition,omitempty" json:"PhysicalCondition,omitempty"`
  SecurityMarker *SchemeValuePair `xml:"SecurityMarker,omitempty" json:"SecurityMarker,omitempty"`
  SensitizationFlag *SensitizationFlag `xml:"SensitizationFlag,omitempty" json:"SensitizationFlag,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type DeleteRequestFields struct {
  XMLName xml.Name `xml:"DeleteRequestFields" json:"-"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestType *SchemeValuePair `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
  RequestScopeType *SchemeValuePair `xml:"RequestScopeType,omitempty" json:"RequestScopeType,omitempty"`
  RequestStatusType *SchemeValuePair `xml:"RequestStatusType,omitempty" json:"RequestStatusType,omitempty"`
  ShippingInformation *ShippingInformation `xml:"ShippingInformation,omitempty" json:"ShippingInformation,omitempty"`
  EarliestDateNeeded string `xml:"EarliestDateNeeded,omitempty" json:"EarliestDateNeeded,omitempty"`
  NeedBeforeDate string `xml:"NeedBeforeDate,omitempty" json:"NeedBeforeDate,omitempty"`
  PickupLocation *SchemeValuePair `xml:"PickupLocation,omitempty" json:"PickupLocation,omitempty"`
  PickupExpiryDate string `xml:"PickupExpiryDate,omitempty" json:"PickupExpiryDate,omitempty"`
  DateOfUserRequest string `xml:"DateOfUserRequest,omitempty" json:"DateOfUserRequest,omitempty"`
  DateAvailable string `xml:"DateAvailable,omitempty" json:"DateAvailable,omitempty"`
  AcknowledgedFeeAmount *AcknowledgedFeeAmount `xml:"AcknowledgedFeeAmount,omitempty" json:"AcknowledgedFeeAmount,omitempty"`
  PaidFeeAmount *PaidFeeAmount `xml:"PaidFeeAmount,omitempty" json:"PaidFeeAmount,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type DeleteUserFields struct {
  XMLName xml.Name `xml:"DeleteUserFields" json:"-"`
  AuthenticationInput []AuthenticationInput `xml:"AuthenticationInput,omitempty" json:"AuthenticationInput,omitempty"`
  NameInformation *NameInformation `xml:"NameInformation,omitempty" json:"NameInformation,omitempty"`
  UserAddressInformation []UserAddressInformation `xml:"UserAddressInformation,omitempty" json:"UserAddressInformation,omitempty"`
  DateOfBirth string `xml:"DateOfBirth,omitempty" json:"DateOfBirth,omitempty"`
  UserLanguage []SchemeValuePair `xml:"UserLanguage,omitempty" json:"UserLanguage,omitempty"`
  UserPrivilege []UserPrivilege `xml:"UserPrivilege,omitempty" json:"UserPrivilege,omitempty"`
  BlockOrTrap []BlockOrTrap `xml:"BlockOrTrap,omitempty" json:"BlockOrTrap,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type DesiredDateDue struct {
  XMLName xml.Name `xml:"DesiredDateDue" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type DesiredDateForReturn struct {
  XMLName xml.Name `xml:"DesiredDateForReturn" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type Destination struct {
  XMLName xml.Name `xml:"Destination" json:"-"`
  Location *Location `xml:"Location,omitempty" json:"Location,omitempty"`
  BinNumber string `xml:"BinNumber,omitempty" json:"BinNumber,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type District struct {
  XMLName xml.Name `xml:"District" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type EarliestDateNeeded struct {
  XMLName xml.Name `xml:"EarliestDateNeeded" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type Edition struct {
  XMLName xml.Name `xml:"Edition" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type ElectronicAddress struct {
  XMLName xml.Name `xml:"ElectronicAddress" json:"-"`
  ElectronicAddressType SchemeValuePair `xml:"ElectronicAddressType" json:"ElectronicAddressType"`
  ElectronicAddressData string `xml:"ElectronicAddressData" json:"ElectronicAddressData"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ElectronicAddressData struct {
  XMLName xml.Name `xml:"ElectronicAddressData" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type ElectronicAddressType struct {
  XMLName xml.Name `xml:"ElectronicAddressType" json:"-"`
  SchemeValuePair
}

type ElectronicDataFormatType struct {
  XMLName xml.Name `xml:"ElectronicDataFormatType" json:"-"`
  SchemeValuePair
}


type ElectronicResource struct {
  XMLName xml.Name `xml:"ElectronicResource" json:"-"`
  ElectronicDataFormatType *SchemeValuePair `xml:"ElectronicDataFormatType,omitempty" json:"ElectronicDataFormatType,omitempty"`
  ActualResource string `xml:"ActualResource,omitempty" json:"ActualResource,omitempty"`
  ReferenceToResource string `xml:"ReferenceToResource,omitempty" json:"ReferenceToResource,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ElectronicResourceProvidedFlag struct {
  XMLName xml.Name `xml:"ElectronicResourceProvidedFlag" json:"-"`
}


type EnumerationLevelInstance struct {
  XMLName xml.Name `xml:"EnumerationLevelInstance" json:"-"`
  EnumerationCaption string `xml:"EnumerationCaption,omitempty" json:"EnumerationCaption,omitempty"`
  EnumerationLevel uint64 `xml:"EnumerationLevel,omitempty" json:"EnumerationLevel,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
  EnumerationValue string `xml:"EnumerationValue" json:"EnumerationValue"`
}

type EnumerationCaption struct {
  XMLName xml.Name `xml:"EnumerationCaption" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type EnumerationLevel struct {
  XMLName xml.Name `xml:"EnumerationLevel" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type EnumerationValue struct {
  XMLName xml.Name `xml:"EnumerationValue" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type Ext struct {
  XMLName xml.Name `xml:"Ext" json:"-"`
  XMLContent []byte   `xml:",innerxml" json:"#content"`
}

type FiscalActionType struct {
  XMLName xml.Name `xml:"FiscalActionType" json:"-"`
  SchemeValuePair
}

type FiscalTransactionDescription struct {
  XMLName xml.Name `xml:"FiscalTransactionDescription" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type FiscalTransactionIdentifierValue struct {
  XMLName xml.Name `xml:"FiscalTransactionIdentifierValue" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type FiscalTransactionInformation struct {
  XMLName xml.Name `xml:"FiscalTransactionInformation" json:"-"`
  FiscalActionType SchemeValuePair `xml:"FiscalActionType" json:"FiscalActionType"`
  FiscalTransactionReferenceId *FiscalTransactionReferenceId `xml:"FiscalTransactionReferenceId,omitempty" json:"FiscalTransactionReferenceId,omitempty"`
  RelatedFiscalTransactionReferenceId []RelatedFiscalTransactionReferenceId `xml:"RelatedFiscalTransactionReferenceId,omitempty" json:"RelatedFiscalTransactionReferenceId,omitempty"`
  FiscalTransactionType SchemeValuePair `xml:"FiscalTransactionType" json:"FiscalTransactionType"`
  ValidFromDate string `xml:"ValidFromDate,omitempty" json:"ValidFromDate,omitempty"`
  ValidToDate string `xml:"ValidToDate,omitempty" json:"ValidToDate,omitempty"`
  Amount Amount `xml:"Amount" json:"Amount"`
  PaymentMethodType *SchemeValuePair `xml:"PaymentMethodType,omitempty" json:"PaymentMethodType,omitempty"`
  FiscalTransactionDescription string `xml:"FiscalTransactionDescription,omitempty" json:"FiscalTransactionDescription,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  ItemDetails *ItemDetails `xml:"ItemDetails,omitempty" json:"ItemDetails,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type FiscalTransactionReferenceId struct {
  XMLName xml.Name `xml:"FiscalTransactionReferenceId" json:"-"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  FiscalTransactionIdentifierValue string `xml:"FiscalTransactionIdentifierValue" json:"FiscalTransactionIdentifierValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type FiscalTransactionType struct {
  XMLName xml.Name `xml:"FiscalTransactionType" json:"-"`
  SchemeValuePair
}

type FromAgencyAuthentication struct {
  XMLName xml.Name `xml:"FromAgencyAuthentication" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type FromAgencyId struct {
  XMLName xml.Name `xml:"FromAgencyId" json:"-"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type FromSystemAuthentication struct {
  XMLName xml.Name `xml:"FromSystemAuthentication" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type FromSystemId struct {
  XMLName xml.Name `xml:"FromSystemId" json:"-"`
  SchemeValuePair
}

type GivenName struct {
  XMLName xml.Name `xml:"GivenName" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type HoldingsChronology struct {
  XMLName xml.Name `xml:"HoldingsChronology" json:"-"`
  ChronologyLevelInstance []ChronologyLevelInstance `xml:"ChronologyLevelInstance,omitempty" json:"ChronologyLevelInstance,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type HoldingsEnumeration struct {
  XMLName xml.Name `xml:"HoldingsEnumeration" json:"-"`
  EnumerationLevelInstance []EnumerationLevelInstance `xml:"EnumerationLevelInstance,omitempty" json:"EnumerationLevelInstance,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type HoldingsInformation struct {
  XMLName xml.Name `xml:"HoldingsInformation" json:"-"`
  StructuredHoldingsData []StructuredHoldingsData `xml:"StructuredHoldingsData,omitempty" json:"StructuredHoldingsData,omitempty"`
  UnstructuredHoldingsData string `xml:"UnstructuredHoldingsData,omitempty" json:"UnstructuredHoldingsData,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type HoldingsSet struct {
  XMLName xml.Name `xml:"HoldingsSet" json:"-"`
  //  Required to be present if the initiation message had this HoldingsSetId.  
  HoldingsSetId string `xml:"HoldingsSetId,omitempty" json:"HoldingsSetId,omitempty"`
  BibliographicDescription *BibliographicDescription `xml:"BibliographicDescription,omitempty" json:"BibliographicDescription,omitempty"`
  //  If all of the items in this HoldingsSet share the same Location data, place that
  //                              information here; otherwise include it in the ItemInformation. 
  Location *Location `xml:"Location,omitempty" json:"Location,omitempty"`
  //  This is the call number for the entire holding. 
  CallNumber string `xml:"CallNumber,omitempty" json:"CallNumber,omitempty"`
  //  This is a summary holdings statement covering the entire holding. 
  SummaryHoldingsInformation *SummaryHoldingsInformation `xml:"SummaryHoldingsInformation,omitempty" json:"SummaryHoldingsInformation,omitempty"`
  ElectronicResource *ElectronicResource `xml:"ElectronicResource,omitempty" json:"ElectronicResource,omitempty"`
  ItemInformation []ItemInformation `xml:"ItemInformation,omitempty" json:"ItemInformation,omitempty"`
  //  TODO: Circulation Status Summary? 
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
}

type HoldingsSetId struct {
  XMLName xml.Name `xml:"HoldingsSetId" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type HoldPickupDate struct {
  XMLName xml.Name `xml:"HoldPickupDate" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type HoldQueueLength struct {
  XMLName xml.Name `xml:"HoldQueueLength" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type HoldQueuePosition struct {
  XMLName xml.Name `xml:"HoldQueuePosition" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type HouseName struct {
  XMLName xml.Name `xml:"HouseName" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type IndeterminateLoanPeriodFlag struct {
  XMLName xml.Name `xml:"IndeterminateLoanPeriodFlag" json:"-"`
}

type Initials struct {
  XMLName xml.Name `xml:"Initials" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type ItemDescription struct {
  XMLName xml.Name `xml:"ItemDescription" json:"-"`
  CallNumber string `xml:"CallNumber,omitempty" json:"CallNumber,omitempty"`
  CopyNumber string `xml:"CopyNumber,omitempty" json:"CopyNumber,omitempty"`
  ItemDescriptionLevel *SchemeValuePair `xml:"ItemDescriptionLevel,omitempty" json:"ItemDescriptionLevel,omitempty"`
  HoldingsInformation *HoldingsInformation `xml:"HoldingsInformation,omitempty" json:"HoldingsInformation,omitempty"`
  NumberOfPieces uint64 `xml:"NumberOfPieces,omitempty" json:"NumberOfPieces,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ItemDescriptionLevel struct {
  XMLName xml.Name `xml:"ItemDescriptionLevel" json:"-"`
  SchemeValuePair
}


type ItemDetails struct {
  XMLName xml.Name `xml:"ItemDetails" json:"-"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  BibliographicDescription BibliographicDescription `xml:"BibliographicDescription" json:"BibliographicDescription"`
  DateCheckedOut string `xml:"DateCheckedOut,omitempty" json:"DateCheckedOut,omitempty"`
  DateRenewed []string `xml:"DateRenewed,omitempty" json:"DateRenewed,omitempty"`
  DateDue string `xml:"DateDue,omitempty" json:"DateDue,omitempty"`
  IndeterminateLoanPeriodFlag *IndeterminateLoanPeriodFlag `xml:"IndeterminateLoanPeriodFlag,omitempty" json:"IndeterminateLoanPeriodFlag,omitempty"`
  NonReturnableFlag *NonReturnableFlag `xml:"NonReturnableFlag,omitempty" json:"NonReturnableFlag,omitempty"`
  DateReturned string `xml:"DateReturned,omitempty" json:"DateReturned,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ItemElementType struct {
  XMLName xml.Name `xml:"ItemElementType" json:"-"`
  SchemeValuePair
}


type ItemId struct {
  XMLName xml.Name `xml:"ItemId" json:"-"`
  AgencyId *SchemeValuePair `xml:"AgencyId,omitempty" json:"AgencyId,omitempty"`
  ItemIdentifierType *SchemeValuePair `xml:"ItemIdentifierType,omitempty" json:"ItemIdentifierType,omitempty"`
  ItemIdentifierValue string `xml:"ItemIdentifierValue" json:"ItemIdentifierValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ItemIdentifierType struct {
  XMLName xml.Name `xml:"ItemIdentifierType" json:"-"`
  SchemeValuePair
}

type ItemIdentifierValue struct {
  XMLName xml.Name `xml:"ItemIdentifierValue" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type ItemInformation struct {
  XMLName xml.Name `xml:"ItemInformation" json:"-"`
  //  Required to be present if the initiation message had this ItemId.  
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId []RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  CurrentBorrower *CurrentBorrower `xml:"CurrentBorrower,omitempty" json:"CurrentBorrower,omitempty"`
  CurrentRequester []CurrentRequester `xml:"CurrentRequester,omitempty" json:"CurrentRequester,omitempty"`
  DateDue string `xml:"DateDue,omitempty" json:"DateDue,omitempty"`
  DateRecalled string `xml:"DateRecalled,omitempty" json:"DateRecalled,omitempty"`
  HoldPickupDate string `xml:"HoldPickupDate,omitempty" json:"HoldPickupDate,omitempty"`
  ItemTransaction *ItemTransaction `xml:"ItemTransaction,omitempty" json:"ItemTransaction,omitempty"`
  //  If the Location information for this item differs from others in its containing HoldingsSet, place it in this ItemOptionalFields 
  ItemOptionalFields *ItemOptionalFields `xml:"ItemOptionalFields,omitempty" json:"ItemOptionalFields,omitempty"`
  ItemNote string `xml:"ItemNote,omitempty" json:"ItemNote,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
  Problem []Problem `xml:"Problem,omitempty" json:"Problem,omitempty"`
}

type ItemNote struct {
  XMLName xml.Name `xml:"ItemNote" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type ItemOptionalFields struct {
  XMLName xml.Name `xml:"ItemOptionalFields" json:"-"`
  BibliographicDescription *BibliographicDescription `xml:"BibliographicDescription,omitempty" json:"BibliographicDescription,omitempty"`
  ItemUseRestrictionType []SchemeValuePair `xml:"ItemUseRestrictionType,omitempty" json:"ItemUseRestrictionType,omitempty"`
  CirculationStatus *SchemeValuePair `xml:"CirculationStatus,omitempty" json:"CirculationStatus,omitempty"`
  HoldQueueLength uint64 `xml:"HoldQueueLength,omitempty" json:"HoldQueueLength,omitempty"`
  ItemDescription *ItemDescription `xml:"ItemDescription,omitempty" json:"ItemDescription,omitempty"`
  Location []Location `xml:"Location,omitempty" json:"Location,omitempty"`
  PhysicalCondition *PhysicalCondition `xml:"PhysicalCondition,omitempty" json:"PhysicalCondition,omitempty"`
  ElectronicResource *ElectronicResource `xml:"ElectronicResource,omitempty" json:"ElectronicResource,omitempty"`
  SecurityMarker *SchemeValuePair `xml:"SecurityMarker,omitempty" json:"SecurityMarker,omitempty"`
  SensitizationFlag *SensitizationFlag `xml:"SensitizationFlag,omitempty" json:"SensitizationFlag,omitempty"`
  DateDue string `xml:"DateDue,omitempty" json:"DateDue,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemReportedLost struct {
  XMLName xml.Name `xml:"ItemReportedLost" json:"-"`
}


type ItemReportedMissing struct {
  XMLName xml.Name `xml:"ItemReportedMissing" json:"-"`
}


type ItemReportedNeverBorrowed struct {
  XMLName xml.Name `xml:"ItemReportedNeverBorrowed" json:"-"`
}


type ItemReportedReturned struct {
  XMLName xml.Name `xml:"ItemReportedReturned" json:"-"`
  DateReportedReturned string `xml:"DateReportedReturned" json:"DateReportedReturned"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type ItemTransaction struct {
  XMLName xml.Name `xml:"ItemTransaction" json:"-"`
  CurrentBorrower *CurrentBorrower `xml:"CurrentBorrower,omitempty" json:"CurrentBorrower,omitempty"`
  CurrentRequester []CurrentRequester `xml:"CurrentRequester,omitempty" json:"CurrentRequester,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ItemUseRestrictionType struct {
  XMLName xml.Name `xml:"ItemUseRestrictionType" json:"-"`
  SchemeValuePair
}

type Language struct {
  XMLName xml.Name `xml:"Language" json:"-"`
  SchemeValuePair
}

type Line1 struct {
  XMLName xml.Name `xml:"Line1" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type Line2 struct {
  XMLName xml.Name `xml:"Line2" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type LoanedItem struct {
  XMLName xml.Name `xml:"LoanedItem" json:"-"`
  ItemId ItemId `xml:"ItemId" json:"ItemId"`
  BibliographicId []BibliographicId `xml:"BibliographicId,omitempty" json:"BibliographicId,omitempty"`
  ReminderLevel uint64 `xml:"ReminderLevel,omitempty" json:"ReminderLevel,omitempty"`
  DateDue string `xml:"DateDue,omitempty" json:"DateDue,omitempty"`
  IndeterminateLoanPeriodFlag *IndeterminateLoanPeriodFlag `xml:"IndeterminateLoanPeriodFlag,omitempty" json:"IndeterminateLoanPeriodFlag,omitempty"`
  Amount *Amount `xml:"Amount,omitempty" json:"Amount,omitempty"`
  Title string `xml:"Title,omitempty" json:"Title,omitempty"`
  MediumType *SchemeValuePair `xml:"MediumType,omitempty" json:"MediumType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type LoanedItemCountValue struct {
  XMLName xml.Name `xml:"LoanedItemCountValue" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}


type LoanedItemsCount struct {
  XMLName xml.Name `xml:"LoanedItemsCount" json:"-"`
  CirculationStatus *SchemeValuePair `xml:"CirculationStatus,omitempty" json:"CirculationStatus,omitempty"`
  ItemUseRestrictionType *SchemeValuePair `xml:"ItemUseRestrictionType,omitempty" json:"ItemUseRestrictionType,omitempty"`
  LoanedItemCountValue uint64 `xml:"LoanedItemCountValue" json:"LoanedItemCountValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LoanedItemsDesired struct {
  XMLName xml.Name `xml:"LoanedItemsDesired" json:"-"`
}

type Locality struct {
  XMLName xml.Name `xml:"Locality" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type Location struct {
  XMLName xml.Name `xml:"Location" json:"-"`
  LocationType SchemeValuePair `xml:"LocationType" json:"LocationType"`
  LocationName LocationName `xml:"LocationName" json:"LocationName"`
  ValidFromDate string `xml:"ValidFromDate,omitempty" json:"ValidFromDate,omitempty"`
  ValidToDate string `xml:"ValidToDate,omitempty" json:"ValidToDate,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LocationName struct {
  XMLName xml.Name `xml:"LocationName" json:"-"`
  LocationNameInstance []LocationNameInstance `xml:"LocationNameInstance,omitempty" json:"LocationNameInstance,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type LocationNameInstance struct {
  XMLName xml.Name `xml:"LocationNameInstance" json:"-"`
  LocationNameLevel uint64 `xml:"LocationNameLevel" json:"LocationNameLevel"`
  LocationNameValue string `xml:"LocationNameValue" json:"LocationNameValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type LocationNameLevel struct {
  XMLName xml.Name `xml:"LocationNameLevel" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type LocationNameValue struct {
  XMLName xml.Name `xml:"LocationNameValue" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type LocationType struct {
  XMLName xml.Name `xml:"LocationType" json:"-"`
  SchemeValuePair
}

type LocationWithinBuilding struct {
  XMLName xml.Name `xml:"LocationWithinBuilding" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type MandatedAction struct {
  XMLName xml.Name `xml:"MandatedAction" json:"-"`
  DateEventOccurred string `xml:"DateEventOccurred" json:"DateEventOccurred"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type MaximumItemsCount struct {
  XMLName xml.Name `xml:"MaximumItemsCount" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type MediumType struct {
  XMLName xml.Name `xml:"MediumType" json:"-"`
  SchemeValuePair
}

type MonetaryValue struct {
  XMLName xml.Name `xml:"MonetaryValue" json:"-"`
  Text int64 `xml:",chardata" json:"#text,omitempty"`
}


type NameInformation struct {
  XMLName xml.Name `xml:"NameInformation" json:"-"`
  PersonalNameInformation *PersonalNameInformation `xml:"PersonalNameInformation,omitempty" json:"PersonalNameInformation,omitempty"`
  OrganizationNameInformation []OrganizationNameInformation `xml:"OrganizationNameInformation,omitempty" json:"OrganizationNameInformation,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type NeedBeforeDate struct {
  XMLName xml.Name `xml:"NeedBeforeDate" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type NextItemToken struct {
  XMLName xml.Name `xml:"NextItemToken" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type NonReturnableFlag struct {
  XMLName xml.Name `xml:"NonReturnableFlag" json:"-"`
}

type NoticeContent struct {
  XMLName xml.Name `xml:"NoticeContent" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type NoticeItem struct {
  XMLName xml.Name `xml:"NoticeItem" json:"-"`
  ItemDetails ItemDetails `xml:"ItemDetails" json:"ItemDetails"`
  Amount *Amount `xml:"Amount,omitempty" json:"Amount,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type NoticeType struct {
  XMLName xml.Name `xml:"NoticeType" json:"-"`
  SchemeValuePair
}

type NumberOfPieces struct {
  XMLName xml.Name `xml:"NumberOfPieces" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}


type OnBehalfOfAgency struct {
  XMLName xml.Name `xml:"OnBehalfOfAgency" json:"-"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type OrganizationName struct {
  XMLName xml.Name `xml:"OrganizationName" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type OrganizationNameInformation struct {
  XMLName xml.Name `xml:"OrganizationNameInformation" json:"-"`
  OrganizationNameType SchemeValuePair `xml:"OrganizationNameType" json:"OrganizationNameType"`
  OrganizationName string `xml:"OrganizationName" json:"OrganizationName"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type OrganizationNameType struct {
  XMLName xml.Name `xml:"OrganizationNameType" json:"-"`
  SchemeValuePair
}

type Pagination struct {
  XMLName xml.Name `xml:"Pagination" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type PaidFeeAmount struct {
  XMLName xml.Name `xml:"PaidFeeAmount" json:"-"`
  CurrencyCode SchemeValuePair `xml:"CurrencyCode" json:"CurrencyCode"`
  MonetaryValue int64 `xml:"MonetaryValue" json:"MonetaryValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type PaymentMethodType struct {
  XMLName xml.Name `xml:"PaymentMethodType" json:"-"`
  SchemeValuePair
}


type Pending struct {
  XMLName xml.Name `xml:"Pending" json:"-"`
  DateOfExpectedReply string `xml:"DateOfExpectedReply,omitempty" json:"DateOfExpectedReply,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type PersonalNameInformation struct {
  XMLName xml.Name `xml:"PersonalNameInformation" json:"-"`
  UnstructuredPersonalUserName string `xml:"UnstructuredPersonalUserName,omitempty" json:"UnstructuredPersonalUserName,omitempty"`
  StructuredPersonalUserName *StructuredPersonalUserName `xml:"StructuredPersonalUserName,omitempty" json:"StructuredPersonalUserName,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type PhysicalAddress struct {
  XMLName xml.Name `xml:"PhysicalAddress" json:"-"`
  StructuredAddress *StructuredAddress `xml:"StructuredAddress,omitempty" json:"StructuredAddress,omitempty"`
  UnstructuredAddress *UnstructuredAddress `xml:"UnstructuredAddress,omitempty" json:"UnstructuredAddress,omitempty"`
  PhysicalAddressType SchemeValuePair `xml:"PhysicalAddressType" json:"PhysicalAddressType"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type PhysicalAddressType struct {
  XMLName xml.Name `xml:"PhysicalAddressType" json:"-"`
  SchemeValuePair
}


type PhysicalCondition struct {
  XMLName xml.Name `xml:"PhysicalCondition" json:"-"`
  PhysicalConditionType SchemeValuePair `xml:"PhysicalConditionType" json:"PhysicalConditionType"`
  PhysicalConditionDetails string `xml:"PhysicalConditionDetails,omitempty" json:"PhysicalConditionDetails,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type PhysicalConditionDetails struct {
  XMLName xml.Name `xml:"PhysicalConditionDetails" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type PhysicalConditionType struct {
  XMLName xml.Name `xml:"PhysicalConditionType" json:"-"`
  SchemeValuePair
}

type PickupDate struct {
  XMLName xml.Name `xml:"PickupDate" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type PickupExpiryDate struct {
  XMLName xml.Name `xml:"PickupExpiryDate" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type PickupLocation struct {
  XMLName xml.Name `xml:"PickupLocation" json:"-"`
  SchemeValuePair
}

type PlaceOfPublication struct {
  XMLName xml.Name `xml:"PlaceOfPublication" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type PostOfficeBox struct {
  XMLName xml.Name `xml:"PostOfficeBox" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type PostalCode struct {
  XMLName xml.Name `xml:"PostalCode" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type Prefix struct {
  XMLName xml.Name `xml:"Prefix" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type PreviousUserId struct {
  XMLName xml.Name `xml:"PreviousUserId" json:"-"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  UserIdentifierValue string `xml:"UserIdentifierValue" json:"UserIdentifierValue"`
  ValidFromDate string `xml:"ValidFromDate,omitempty" json:"ValidFromDate,omitempty"`
  ValidToDate string `xml:"ValidToDate,omitempty" json:"ValidToDate,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type Problem struct {
  XMLName xml.Name `xml:"Problem" json:"-"`
  ProblemType SchemeValuePair `xml:"ProblemType" json:"ProblemType"`
  ProblemDetail string `xml:"ProblemDetail,omitempty" json:"ProblemDetail,omitempty"`
  ProblemElement string `xml:"ProblemElement,omitempty" json:"ProblemElement,omitempty"`
  ProblemValue string `xml:"ProblemValue,omitempty" json:"ProblemValue,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ProblemDetail struct {
  XMLName xml.Name `xml:"ProblemDetail" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type ProblemElement struct {
  XMLName xml.Name `xml:"ProblemElement" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type ProblemType struct {
  XMLName xml.Name `xml:"ProblemType" json:"-"`
  SchemeValuePair
}

type ProblemValue struct {
  XMLName xml.Name `xml:"ProblemValue" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type PromptInput struct {
  XMLName xml.Name `xml:"PromptInput" json:"-"`
  AuthenticationInputType SchemeValuePair `xml:"AuthenticationInputType" json:"AuthenticationInputType"`
  AuthenticationDataFormatType SchemeValuePair `xml:"AuthenticationDataFormatType" json:"AuthenticationDataFormatType"`
  SensitiveDataFlag *SensitiveDataFlag `xml:"SensitiveDataFlag,omitempty" json:"SensitiveDataFlag,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type PromptOutput struct {
  XMLName xml.Name `xml:"PromptOutput" json:"-"`
  AuthenticationPromptData string `xml:"AuthenticationPromptData" json:"AuthenticationPromptData"`
  AuthenticationPromptType SchemeValuePair `xml:"AuthenticationPromptType" json:"AuthenticationPromptType"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type PublicationDate struct {
  XMLName xml.Name `xml:"PublicationDate" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type PublicationDateOfComponent struct {
  XMLName xml.Name `xml:"PublicationDateOfComponent" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type Publisher struct {
  XMLName xml.Name `xml:"Publisher" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type ReferenceToResource struct {
  XMLName xml.Name `xml:"ReferenceToResource" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type Region struct {
  XMLName xml.Name `xml:"Region" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type RelatedFiscalTransactionReferenceId struct {
  XMLName xml.Name `xml:"RelatedFiscalTransactionReferenceId" json:"-"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  FiscalTransactionIdentifierValue string `xml:"FiscalTransactionIdentifierValue" json:"FiscalTransactionIdentifierValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ReminderLevel struct {
  XMLName xml.Name `xml:"ReminderLevel" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type RenewalCount struct {
  XMLName xml.Name `xml:"RenewalCount" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}


type RenewalNotPermitted struct {
  XMLName xml.Name `xml:"RenewalNotPermitted" json:"-"`
}

type RequestedActionType struct {
  XMLName xml.Name `xml:"RequestedActionType" json:"-"`
  SchemeValuePair
}


type RequestedItemsDesired struct {
  XMLName xml.Name `xml:"RequestedItemsDesired" json:"-"`
}

type RequestElementType struct {
  XMLName xml.Name `xml:"RequestElementType" json:"-"`
  SchemeValuePair
}


type RequestId struct {
  XMLName xml.Name `xml:"RequestId" json:"-"`
  AgencyId *SchemeValuePair `xml:"AgencyId,omitempty" json:"AgencyId,omitempty"`
  RequestIdentifierType *SchemeValuePair `xml:"RequestIdentifierType,omitempty" json:"RequestIdentifierType,omitempty"`
  RequestIdentifierValue string `xml:"RequestIdentifierValue" json:"RequestIdentifierValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type RequestIdentifierType struct {
  XMLName xml.Name `xml:"RequestIdentifierType" json:"-"`
  SchemeValuePair
}

type RequestIdentifierValue struct {
  XMLName xml.Name `xml:"RequestIdentifierValue" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type RequestScopeType struct {
  XMLName xml.Name `xml:"RequestScopeType" json:"-"`
  SchemeValuePair
}

type RequestStatusType struct {
  XMLName xml.Name `xml:"RequestStatusType" json:"-"`
  SchemeValuePair
}

type RequestType struct {
  XMLName xml.Name `xml:"RequestType" json:"-"`
  SchemeValuePair
}


type RequestedItem struct {
  XMLName xml.Name `xml:"RequestedItem" json:"-"`
  ItemId *ItemId `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
  RequestId *RequestId `xml:"RequestId,omitempty" json:"RequestId,omitempty"`
  BibliographicId []BibliographicId `xml:"BibliographicId,omitempty" json:"BibliographicId,omitempty"`
  RequestType SchemeValuePair `xml:"RequestType" json:"RequestType"`
  RequestStatusType SchemeValuePair `xml:"RequestStatusType" json:"RequestStatusType"`
  DatePlaced string `xml:"DatePlaced" json:"DatePlaced"`
  PickupDate string `xml:"PickupDate,omitempty" json:"PickupDate,omitempty"`
  PickupLocation *SchemeValuePair `xml:"PickupLocation,omitempty" json:"PickupLocation,omitempty"`
  PickupExpiryDate string `xml:"PickupExpiryDate,omitempty" json:"PickupExpiryDate,omitempty"`
  ReminderLevel uint64 `xml:"ReminderLevel,omitempty" json:"ReminderLevel,omitempty"`
  HoldQueuePosition uint64 `xml:"HoldQueuePosition,omitempty" json:"HoldQueuePosition,omitempty"`
  Title string `xml:"Title,omitempty" json:"Title,omitempty"`
  MediumType *SchemeValuePair `xml:"MediumType,omitempty" json:"MediumType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type RequestedItemCountValue struct {
  XMLName xml.Name `xml:"RequestedItemCountValue" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}


type RequestedItemsCount struct {
  XMLName xml.Name `xml:"RequestedItemsCount" json:"-"`
  RequestType *SchemeValuePair `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
  CirculationStatus *SchemeValuePair `xml:"CirculationStatus,omitempty" json:"CirculationStatus,omitempty"`
  ItemUseRestrictionType *SchemeValuePair `xml:"ItemUseRestrictionType,omitempty" json:"ItemUseRestrictionType,omitempty"`
  RequestedItemCountValue uint64 `xml:"RequestedItemCountValue" json:"RequestedItemCountValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type RequiredFeeAmount struct {
  XMLName xml.Name `xml:"RequiredFeeAmount" json:"-"`
  CurrencyCode SchemeValuePair `xml:"CurrencyCode" json:"CurrencyCode"`
  MonetaryValue int64 `xml:"MonetaryValue" json:"MonetaryValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type RequiredItemUseRestrictionType struct {
  XMLName xml.Name `xml:"RequiredItemUseRestrictionType" json:"-"`
  SchemeValuePair
}


type ResourceDesired struct {
  XMLName xml.Name `xml:"ResourceDesired" json:"-"`
}


type RoutingInformation struct {
  XMLName xml.Name `xml:"RoutingInformation" json:"-"`
  RoutingInstructions string `xml:"RoutingInstructions" json:"RoutingInstructions"`
  Destination Destination `xml:"Destination" json:"Destination"`
  RequestType *SchemeValuePair `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
  UserId *UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  NameInformation *NameInformation `xml:"NameInformation,omitempty" json:"NameInformation,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type RoutingInstructions struct {
  XMLName xml.Name `xml:"RoutingInstructions" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type SecurityMarker struct {
  XMLName xml.Name `xml:"SecurityMarker" json:"-"`
  SchemeValuePair
}


type SensitiveDataFlag struct {
  XMLName xml.Name `xml:"SensitiveDataFlag" json:"-"`
}


type SensitizationFlag struct {
  XMLName xml.Name `xml:"SensitizationFlag" json:"-"`
}

type SeriesTitleNumber struct {
  XMLName xml.Name `xml:"SeriesTitleNumber" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type ShippingInformation struct {
  XMLName xml.Name `xml:"ShippingInformation" json:"-"`
  ShippingInstructions string `xml:"ShippingInstructions,omitempty" json:"ShippingInstructions,omitempty"`
  ShippingNote string `xml:"ShippingNote,omitempty" json:"ShippingNote,omitempty"`
  PhysicalAddress *PhysicalAddress `xml:"PhysicalAddress,omitempty" json:"PhysicalAddress,omitempty"`
  ElectronicAddress *ElectronicAddress `xml:"ElectronicAddress,omitempty" json:"ElectronicAddress,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ShippingInstructions struct {
  XMLName xml.Name `xml:"ShippingInstructions" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type ShippingNote struct {
  XMLName xml.Name `xml:"ShippingNote" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type SponsoringBody struct {
  XMLName xml.Name `xml:"SponsoringBody" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type Street struct {
  XMLName xml.Name `xml:"Street" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type StructuredAddress struct {
  XMLName xml.Name `xml:"StructuredAddress" json:"-"`
  LocationWithinBuilding string `xml:"LocationWithinBuilding,omitempty" json:"LocationWithinBuilding,omitempty"`
  HouseName string `xml:"HouseName,omitempty" json:"HouseName,omitempty"`
  District string `xml:"District,omitempty" json:"District,omitempty"`
  PostOfficeBox string `xml:"PostOfficeBox,omitempty" json:"PostOfficeBox,omitempty"`
  Street string `xml:"Street,omitempty" json:"Street,omitempty"`
  Line1 string `xml:"Line1,omitempty" json:"Line1,omitempty"`
  Line2 string `xml:"Line2,omitempty" json:"Line2,omitempty"`
  Locality string `xml:"Locality,omitempty" json:"Locality,omitempty"`
  Region string `xml:"Region,omitempty" json:"Region,omitempty"`
  Country string `xml:"Country,omitempty" json:"Country,omitempty"`
  PostalCode string `xml:"PostalCode,omitempty" json:"PostalCode,omitempty"`
  CareOf string `xml:"CareOf,omitempty" json:"CareOf,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type StructuredHoldingsData struct {
  XMLName xml.Name `xml:"StructuredHoldingsData" json:"-"`
  HoldingsChronology *HoldingsChronology `xml:"HoldingsChronology,omitempty" json:"HoldingsChronology,omitempty"`
  HoldingsEnumeration *HoldingsEnumeration `xml:"HoldingsEnumeration,omitempty" json:"HoldingsEnumeration,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type StructuredPersonalUserName struct {
  XMLName xml.Name `xml:"StructuredPersonalUserName" json:"-"`
  Prefix string `xml:"Prefix,omitempty" json:"Prefix,omitempty"`
  GivenName string `xml:"GivenName,omitempty" json:"GivenName,omitempty"`
  Initials string `xml:"Initials,omitempty" json:"Initials,omitempty"`
  Surname string `xml:"Surname" json:"Surname"`
  Suffix string `xml:"Suffix,omitempty" json:"Suffix,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type Suffix struct {
  XMLName xml.Name `xml:"Suffix" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type SummaryHoldingsInformation struct {
  XMLName xml.Name `xml:"SummaryHoldingsInformation" json:"-"`
  StructuredHoldingsData []StructuredHoldingsData `xml:"StructuredHoldingsData,omitempty" json:"StructuredHoldingsData,omitempty"`
  UnstructuredHoldingsData string `xml:"UnstructuredHoldingsData,omitempty" json:"UnstructuredHoldingsData,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type Surname struct {
  XMLName xml.Name `xml:"Surname" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type Title struct {
  XMLName xml.Name `xml:"Title" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type TitleHoldQueueLength struct {
  XMLName xml.Name `xml:"TitleHoldQueueLength" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type TitleOfComponent struct {
  XMLName xml.Name `xml:"TitleOfComponent" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type ToAgencyId struct {
  XMLName xml.Name `xml:"ToAgencyId" json:"-"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type ToSystemId struct {
  XMLName xml.Name `xml:"ToSystemId" json:"-"`
  SchemeValuePair
}


type UnstructuredAddress struct {
  XMLName xml.Name `xml:"UnstructuredAddress" json:"-"`
  UnstructuredAddressType SchemeValuePair `xml:"UnstructuredAddressType" json:"UnstructuredAddressType"`
  UnstructuredAddressData string `xml:"UnstructuredAddressData" json:"UnstructuredAddressData"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type UnstructuredAddressData struct {
  XMLName xml.Name `xml:"UnstructuredAddressData" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type UnstructuredAddressType struct {
  XMLName xml.Name `xml:"UnstructuredAddressType" json:"-"`
  SchemeValuePair
}

type UnstructuredHoldingsData struct {
  XMLName xml.Name `xml:"UnstructuredHoldingsData" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type UnstructuredPersonalUserName struct {
  XMLName xml.Name `xml:"UnstructuredPersonalUserName" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type UserAddressInformation struct {
  XMLName xml.Name `xml:"UserAddressInformation" json:"-"`
  UserAddressRoleType SchemeValuePair `xml:"UserAddressRoleType" json:"UserAddressRoleType"`
  ValidFromDate string `xml:"ValidFromDate,omitempty" json:"ValidFromDate,omitempty"`
  ValidToDate string `xml:"ValidToDate,omitempty" json:"ValidToDate,omitempty"`
  PhysicalAddress *PhysicalAddress `xml:"PhysicalAddress,omitempty" json:"PhysicalAddress,omitempty"`
  ElectronicAddress *ElectronicAddress `xml:"ElectronicAddress,omitempty" json:"ElectronicAddress,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type UserAddressRoleType struct {
  XMLName xml.Name `xml:"UserAddressRoleType" json:"-"`
  SchemeValuePair
}


type UserElementEnum string

const UserElementEnumLoanedItems UserElementEnum = "loaned items"
const UserElementEnumPreviousUserId UserElementEnum = "previous user id"
const UserElementEnumRequestedItems UserElementEnum = "requested items"
const UserElementEnumUserFiscalAccount UserElementEnum = "user fiscal account"

type UserElementType struct {
  XMLName xml.Name `xml:"UserElementType" json:"-"`
  SchemeValuePair
}


type UserFiscalAccount struct {
  XMLName xml.Name `xml:"UserFiscalAccount" json:"-"`
  AccountBalance AccountBalance `xml:"AccountBalance" json:"AccountBalance"`
  AccountDetails []AccountDetails `xml:"AccountDetails,omitempty" json:"AccountDetails,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserFiscalAccountDesired struct {
  XMLName xml.Name `xml:"UserFiscalAccountDesired" json:"-"`
}


type UserId struct {
  XMLName xml.Name `xml:"UserId" json:"-"`
  AgencyId *SchemeValuePair `xml:"AgencyId,omitempty" json:"AgencyId,omitempty"`
  UserIdentifierType *SchemeValuePair `xml:"UserIdentifierType,omitempty" json:"UserIdentifierType,omitempty"`
  UserIdentifierValue string `xml:"UserIdentifierValue" json:"UserIdentifierValue"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type UserIdentifierType struct {
  XMLName xml.Name `xml:"UserIdentifierType" json:"-"`
  SchemeValuePair
}

type UserIdentifierValue struct {
  XMLName xml.Name `xml:"UserIdentifierValue" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type UserLanguage struct {
  XMLName xml.Name `xml:"UserLanguage" json:"-"`
  SchemeValuePair
}


type UserNoticeDetails struct {
  XMLName xml.Name `xml:"UserNoticeDetails" json:"-"`
  NoticeType SchemeValuePair `xml:"NoticeType" json:"NoticeType"`
  NoticeContent string `xml:"NoticeContent,omitempty" json:"NoticeContent,omitempty"`
  NoticeItem []NoticeItem `xml:"NoticeItem,omitempty" json:"NoticeItem,omitempty"`
  UserFiscalAccount *UserFiscalAccount `xml:"UserFiscalAccount,omitempty" json:"UserFiscalAccount,omitempty"`
  UserPrivilege *UserPrivilege `xml:"UserPrivilege,omitempty" json:"UserPrivilege,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserOptionalFields struct {
  XMLName xml.Name `xml:"UserOptionalFields" json:"-"`
  NameInformation *NameInformation `xml:"NameInformation,omitempty" json:"NameInformation,omitempty"`
  UserAddressInformation []UserAddressInformation `xml:"UserAddressInformation,omitempty" json:"UserAddressInformation,omitempty"`
  DateOfBirth string `xml:"DateOfBirth,omitempty" json:"DateOfBirth,omitempty"`
  UserLanguage []SchemeValuePair `xml:"UserLanguage,omitempty" json:"UserLanguage,omitempty"`
  UserPrivilege []UserPrivilege `xml:"UserPrivilege,omitempty" json:"UserPrivilege,omitempty"`
  BlockOrTrap []BlockOrTrap `xml:"BlockOrTrap,omitempty" json:"BlockOrTrap,omitempty"`
  UserId []UserId `xml:"UserId,omitempty" json:"UserId,omitempty"`
  PreviousUserId []PreviousUserId `xml:"PreviousUserId,omitempty" json:"PreviousUserId,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserPrivilege struct {
  XMLName xml.Name `xml:"UserPrivilege" json:"-"`
  AgencyId SchemeValuePair `xml:"AgencyId" json:"AgencyId"`
  AgencyUserPrivilegeType SchemeValuePair `xml:"AgencyUserPrivilegeType" json:"AgencyUserPrivilegeType"`
  ValidFromDate string `xml:"ValidFromDate,omitempty" json:"ValidFromDate,omitempty"`
  ValidToDate string `xml:"ValidToDate,omitempty" json:"ValidToDate,omitempty"`
  UserPrivilegeFee *UserPrivilegeFee `xml:"UserPrivilegeFee,omitempty" json:"UserPrivilegeFee,omitempty"`
  UserPrivilegeStatus *UserPrivilegeStatus `xml:"UserPrivilegeStatus,omitempty" json:"UserPrivilegeStatus,omitempty"`
  UserPrivilegeDescription string `xml:"UserPrivilegeDescription,omitempty" json:"UserPrivilegeDescription,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type UserPrivilegeDescription struct {
  XMLName xml.Name `xml:"UserPrivilegeDescription" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}


type UserPrivilegeFee struct {
  XMLName xml.Name `xml:"UserPrivilegeFee" json:"-"`
  Amount Amount `xml:"Amount" json:"Amount"`
  PaymentMethodType *SchemeValuePair `xml:"PaymentMethodType,omitempty" json:"PaymentMethodType,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}


type UserPrivilegeStatus struct {
  XMLName xml.Name `xml:"UserPrivilegeStatus" json:"-"`
  UserPrivilegeStatusType SchemeValuePair `xml:"UserPrivilegeStatusType" json:"UserPrivilegeStatusType"`
  DateOfUserPrivilegeStatus string `xml:"DateOfUserPrivilegeStatus,omitempty" json:"DateOfUserPrivilegeStatus,omitempty"`
  Ext *Ext `xml:"Ext,omitempty" json:"Ext,omitempty"`
}

type UserPrivilegeStatusType struct {
  XMLName xml.Name `xml:"UserPrivilegeStatusType" json:"-"`
  SchemeValuePair
}

type ValidFromDate struct {
  XMLName xml.Name `xml:"ValidFromDate" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type ValidToDate struct {
  XMLName xml.Name `xml:"ValidToDate" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type SchemeValuePair struct {
  Text string `xml:",chardata" json:"#text,omitempty"`
  Scheme *utils.PrefixAttr `xml:"Scheme,attr,omitempty" json:"@Scheme,omitempty"`
}

