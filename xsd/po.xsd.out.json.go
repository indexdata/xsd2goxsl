// Code generated by xsd2go.xsl; DO NOT EDIT.
//go:build checkxsd

package PurchaseOrderSchema

import (
  "encoding/xml"
)

type Comment struct {
  XMLName xml.Name `xml:"comment" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type PurchaseOrder struct {
  XMLName xml.Name `xml:"purchaseOrder" json:"-"`
  PurchaseOrderType
}

type USAddress struct {
  //         Purchase order schema for Example.Microsoft.com.
  //       
  Name string `xml:"name" json:"name"`
  Street string `xml:"street" json:"street"`
  City string `xml:"city" json:"city"`
  State string `xml:"state" json:"state"`
  Zip float64 `xml:"zip" json:"zip"`
  Country string `xml:"country,attr,omitempty" json:"@country,omitempty"`
}

type SKU string


type Items struct {
  Item []Item `xml:"item,omitempty" json:"item,omitempty"`
}

type PurchaseOrderType struct {
  ShipTo USAddress `xml:"shipTo" json:"shipTo"`
  BillTo USAddress `xml:"billTo" json:"billTo"`
  Comment string `xml:"comment,omitempty" json:"comment,omitempty"`
  Items Items `xml:"items" json:"items"`
  OrderDate string `xml:"orderDate,attr,omitempty" json:"@orderDate,omitempty"`
  ConfirmDate string `xml:"confirmDate,attr" json:"@confirmDate"`
}


type Item struct {
  XMLName xml.Name `xml:"item" json:"-"`
  ProductName string `xml:"productName" json:"productName"`
  Quantity uint64 `xml:"quantity" json:"quantity"`
  USPrice float64 `xml:"USPrice" json:"USPrice"`
  Comment string `xml:"comment" json:"comment"`
  ShipDate string `xml:"shipDate,omitempty" json:"shipDate,omitempty"`
  PartNum string `xml:"partNum,attr,omitempty" json:"@partNum,omitempty"`
}

