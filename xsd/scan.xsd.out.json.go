// Code generated by xsd2go.xsl; DO NOT EDIT.
//go:build checkxsd

//     Search Web Services searchRetrieve Version 1.0
//     OASIS Standard
//     30 January 2013
//     Source: http://docs.oasis-open.org/search-ws/searchRetrieve/v1.0/os/schemas/
//     Copyright (c) OASIS Open 2013.  All Rights Reserved.
// Editor: Ray Denenberg, Library of Congress.  rden@loc.gov
// *****
package scan

import (
  "encoding/xml"
  xcql "github.com/indexdata/xsd2goxsl/xsd/xcql.xsd_test"
  diag "github.com/indexdata/xsd2goxsl/xsd/diagnostic.xsd_test"
)

type ScanResponse struct {
  XMLName xml.Name `xml:"scanResponse" json:"-"`
  ScanResponseDefinition
}

type ScanResponseDefinition struct {
  Terms *TermsDefinition `xml:"terms,omitempty" json:"terms,omitempty"`
  EchoedScanRequest *EchoedScanRequestDefinition `xml:"echoedScanRequest,omitempty" json:"echoedScanRequest,omitempty"`
  Diagnostics *DiagnosticsDefinition `xml:"diagnostics,omitempty" json:"diagnostics,omitempty"`
  ExtraResponseData *ExtraDataDefinition `xml:"extraResponseData,omitempty" json:"extraResponseData,omitempty"`
}

type DiagnosticsDefinition struct {
  Diagnostic []diag.Diagnostic `xml:"diagnostic,omitempty" json:"diagnostic,omitempty"`
}

type EchoedScanRequestDefinition struct {
  ScanClause string `xml:"scanClause" json:"scanClause"`
  XScanClause *xcql.SearchClauseDefinition `xml:"xScanClause,omitempty" json:"xScanClause,omitempty"`
  ResponsePosition uint64 `xml:"responsePosition,omitempty" json:"responsePosition,omitempty"`
  MaximumTerms uint64 `xml:"maximumTerms,omitempty" json:"maximumTerms,omitempty"`
  HttpAccept string `xml:"httpAccept,omitempty" json:"httpAccept,omitempty"`
  Stylesheet string `xml:"stylesheet,omitempty" json:"stylesheet,omitempty"`
  ExtraRequestData *ExtraDataDefinition `xml:"extraRequestData,omitempty" json:"extraRequestData,omitempty"`
}

type ExtraDataDefinition struct {
  XMLContent []byte   `xml:",innerxml" json:"#content"`
}

type TermDefinition struct {
  Value string `xml:"value" json:"value"`
  NumberOfRecords uint64 `xml:"numberOfRecords,omitempty" json:"numberOfRecords,omitempty"`
  DisplayTerm string `xml:"displayTerm,omitempty" json:"displayTerm,omitempty"`
  WhereInList *WhereInListDefinition `xml:"whereInList,omitempty" json:"whereInList,omitempty"`
  RequestURL string `xml:"requestURL,omitempty" json:"requestURL,omitempty"`
  ExtraTermData *ExtraDataDefinition `xml:"extraTermData,omitempty" json:"extraTermData,omitempty"`
}

type TermsDefinition struct {
  Term []TermDefinition `xml:"term,omitempty" json:"term,omitempty"`
}

type WhereInListDefinition string

const WhereInListDefinitionFirst WhereInListDefinition = "first"
const WhereInListDefinitionLast WhereInListDefinition = "last"
const WhereInListDefinitionOnly WhereInListDefinition = "only"
const WhereInListDefinitionInner WhereInListDefinition = "inner"

type Diagnostics struct {
  XMLName xml.Name `xml:"diagnostics" json:"-"`
  DiagnosticsDefinition
}

type DisplayTerm struct {
  XMLName xml.Name `xml:"displayTerm" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type ExtraResponseData struct {
  XMLName xml.Name `xml:"extraResponseData" json:"-"`
  ExtraDataDefinition
}

type EchoedScanRequest struct {
  XMLName xml.Name `xml:"echoedScanRequest" json:"-"`
  EchoedScanRequestDefinition
}

type ExtraRequestData struct {
  XMLName xml.Name `xml:"extraRequestData" json:"-"`
  ExtraDataDefinition
}

type ExtraTermData struct {
  XMLName xml.Name `xml:"extraTermData" json:"-"`
  ExtraDataDefinition
}

type HttpAccept struct {
  XMLName xml.Name `xml:"httpAccept" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type MaximumTerms struct {
  XMLName xml.Name `xml:"maximumTerms" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type NumberOfRecords struct {
  XMLName xml.Name `xml:"numberOfRecords" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type ResponsePosition struct {
  XMLName xml.Name `xml:"responsePosition" json:"-"`
  Text uint64 `xml:",chardata" json:"#text,omitempty"`
}

type RequestURL struct {
  XMLName xml.Name `xml:"requestURL" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type ScanClause struct {
  XMLName xml.Name `xml:"scanClause" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type Stylesheet struct {
  XMLName xml.Name `xml:"stylesheet" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type Terms struct {
  XMLName xml.Name `xml:"terms" json:"-"`
  TermsDefinition
}

type Term struct {
  XMLName xml.Name `xml:"term" json:"-"`
  TermDefinition
}

type Value struct {
  XMLName xml.Name `xml:"value" json:"-"`
  Text string `xml:",chardata" json:"#text,omitempty"`
}

type WhereInList struct {
  XMLName xml.Name `xml:"whereInList" json:"-"`
  WhereInListDefinition
}

type XScanClause struct {
  XMLName xml.Name `xml:"xScanClause" json:"-"`
  xcql.SearchClauseDefinition
}

